//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace currencyClient.wsr {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.xignite.com/services/", ConfigurationName="wsr.XigniteCurrenciesSoap")]
    public interface XigniteCurrenciesSoap {
        
        // CODEGEN: Generating message contract since message ListCurrenciesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/ListCurrencies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.ListCurrenciesResponse ListCurrencies(currencyClient.wsr.ListCurrenciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/ListCurrencies", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.ListCurrenciesResponse> ListCurrenciesAsync(currencyClient.wsr.ListCurrenciesRequest request);
        
        // CODEGEN: Generating message contract since message ListActiveCurrenciesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/ListActiveCurrencies", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.ListActiveCurrenciesResponse ListActiveCurrencies(currencyClient.wsr.ListActiveCurrenciesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/ListActiveCurrencies", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.ListActiveCurrenciesResponse> ListActiveCurrenciesAsync(currencyClient.wsr.ListActiveCurrenciesRequest request);
        
        // CODEGEN: Generating message contract since message ListOfficialRatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/ListOfficialRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.ListOfficialRatesResponse ListOfficialRates(currencyClient.wsr.ListOfficialRatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/ListOfficialRates", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.ListOfficialRatesResponse> ListOfficialRatesAsync(currencyClient.wsr.ListOfficialRatesRequest request);
        
        // CODEGEN: Generating message contract since message GetUnitOfAccountRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetUnitOfAccount", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetUnitOfAccountResponse GetUnitOfAccount(currencyClient.wsr.GetUnitOfAccountRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetUnitOfAccount", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetUnitOfAccountResponse> GetUnitOfAccountAsync(currencyClient.wsr.GetUnitOfAccountRequest request);
        
        // CODEGEN: Generating message contract since message ConvertRealTimeValueRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/ConvertRealTimeValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.ConvertRealTimeValueResponse ConvertRealTimeValue(currencyClient.wsr.ConvertRealTimeValueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/ConvertRealTimeValue", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.ConvertRealTimeValueResponse> ConvertRealTimeValueAsync(currencyClient.wsr.ConvertRealTimeValueRequest request);
        
        // CODEGEN: Generating message contract since message ConvertHistoricalValueRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/ConvertHistoricalValue", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.ConvertHistoricalValueResponse ConvertHistoricalValue(currencyClient.wsr.ConvertHistoricalValueRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/ConvertHistoricalValue", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.ConvertHistoricalValueResponse> ConvertHistoricalValueAsync(currencyClient.wsr.ConvertHistoricalValueRequest request);
        
        // CODEGEN: Generating message contract since message GetRealTimeForwardRateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeForwardRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetRealTimeForwardRateResponse GetRealTimeForwardRate(currencyClient.wsr.GetRealTimeForwardRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeForwardRate", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeForwardRateResponse> GetRealTimeForwardRateAsync(currencyClient.wsr.GetRealTimeForwardRateRequest request);
        
        // CODEGEN: Generating message contract since message GetRealTimeCrossRateAsStringRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRateAsString", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetRealTimeCrossRateAsStringResponse GetRealTimeCrossRateAsString(currencyClient.wsr.GetRealTimeCrossRateAsStringRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRateAsString", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateAsStringResponse> GetRealTimeCrossRateAsStringAsync(currencyClient.wsr.GetRealTimeCrossRateAsStringRequest request);
        
        // CODEGEN: Generating message contract since message GetLatestCrossRateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetLatestCrossRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetLatestCrossRateResponse GetLatestCrossRate(currencyClient.wsr.GetLatestCrossRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetLatestCrossRate", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetLatestCrossRateResponse> GetLatestCrossRateAsync(currencyClient.wsr.GetLatestCrossRateRequest request);
        
        // CODEGEN: Generating message contract since message GetLatestCrossRatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetLatestCrossRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetLatestCrossRatesResponse GetLatestCrossRates(currencyClient.wsr.GetLatestCrossRatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetLatestCrossRates", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetLatestCrossRatesResponse> GetLatestCrossRatesAsync(currencyClient.wsr.GetLatestCrossRatesRequest request);
        
        // CODEGEN: Generating message contract since message GetRealTimeCrossRateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetRealTimeCrossRateResponse GetRealTimeCrossRate(currencyClient.wsr.GetRealTimeCrossRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRate", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateResponse> GetRealTimeCrossRateAsync(currencyClient.wsr.GetRealTimeCrossRateRequest request);
        
        // CODEGEN: Generating message contract since message GetRealTimeCrossRateGMTRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRateGMT", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetRealTimeCrossRateGMTResponse GetRealTimeCrossRateGMT(currencyClient.wsr.GetRealTimeCrossRateGMTRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRateGMT", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateGMTResponse> GetRealTimeCrossRateGMTAsync(currencyClient.wsr.GetRealTimeCrossRateGMTRequest request);
        
        // CODEGEN: Generating message contract since message GetRawCrossRateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRawCrossRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetRawCrossRateResponse GetRawCrossRate(currencyClient.wsr.GetRawCrossRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRawCrossRate", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRawCrossRateResponse> GetRawCrossRateAsync(currencyClient.wsr.GetRawCrossRateRequest request);
        
        // CODEGEN: Generating message contract since message GetRawCrossRatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRawCrossRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetRawCrossRatesResponse GetRawCrossRates(currencyClient.wsr.GetRawCrossRatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRawCrossRates", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRawCrossRatesResponse> GetRawCrossRatesAsync(currencyClient.wsr.GetRawCrossRatesRequest request);
        
        // CODEGEN: Generating message contract since message GetRealTimeCrossRatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetRealTimeCrossRatesResponse GetRealTimeCrossRates(currencyClient.wsr.GetRealTimeCrossRatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRates", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRatesResponse> GetRealTimeCrossRatesAsync(currencyClient.wsr.GetRealTimeCrossRatesRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRateTablesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateTables", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRateTablesResponse GetHistoricalCrossRateTables(currencyClient.wsr.GetHistoricalCrossRateTablesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateTables", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTablesResponse> GetHistoricalCrossRateTablesAsync(currencyClient.wsr.GetHistoricalCrossRateTablesRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRateTablesBidAskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateTablesBidAsk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRateTablesBidAskResponse GetHistoricalCrossRateTablesBidAsk(currencyClient.wsr.GetHistoricalCrossRateTablesBidAskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateTablesBidAsk", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTablesBidAskResponse> GetHistoricalCrossRateTablesBidAskAsync(currencyClient.wsr.GetHistoricalCrossRateTablesBidAskRequest request);
        
        // CODEGEN: Generating message contract since message GetCurrencyReportRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyReport", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetCurrencyReportResponse GetCurrencyReport(currencyClient.wsr.GetCurrencyReportRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyReport", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyReportResponse> GetCurrencyReportAsync(currencyClient.wsr.GetCurrencyReportRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRateTableRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRateTableResponse GetHistoricalCrossRateTable(currencyClient.wsr.GetHistoricalCrossRateTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateTable", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTableResponse> GetHistoricalCrossRateTableAsync(currencyClient.wsr.GetHistoricalCrossRateTableRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRateTableBidAskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateTableBidAsk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRateTableBidAskResponse GetHistoricalCrossRateTableBidAsk(currencyClient.wsr.GetHistoricalCrossRateTableBidAskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateTableBidAsk", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTableBidAskResponse> GetHistoricalCrossRateTableBidAskAsync(currencyClient.wsr.GetHistoricalCrossRateTableBidAskRequest request);
        
        // CODEGEN: Generating message contract since message GetRealTimeCrossRateTableRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRateTable", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetRealTimeCrossRateTableResponse GetRealTimeCrossRateTable(currencyClient.wsr.GetRealTimeCrossRateTableRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRateTable", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateTableResponse> GetRealTimeCrossRateTableAsync(currencyClient.wsr.GetRealTimeCrossRateTableRequest request);
        
        // CODEGEN: Generating message contract since message GetRealTimeCrossRateTableWithBidAskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRateTableWithBidAsk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskResponse GetRealTimeCrossRateTableWithBidAsk(currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRateTableWithBidAsk", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskResponse> GetRealTimeCrossRateTableWithBidAskAsync(currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskRequest request);
        
        // CODEGEN: Generating message contract since message GetAllCrossRatesForACurrencyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetAllCrossRatesForACurrency", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetAllCrossRatesForACurrencyResponse GetAllCrossRatesForACurrency(currencyClient.wsr.GetAllCrossRatesForACurrencyRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetAllCrossRatesForACurrency", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetAllCrossRatesForACurrencyResponse> GetAllCrossRatesForACurrencyAsync(currencyClient.wsr.GetAllCrossRatesForACurrencyRequest request);
        
        // CODEGEN: Generating message contract since message GetRealTimeCrossRateTableAsHTMLRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRateTableAsHTML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLResponse GetRealTimeCrossRateTableAsHTML(currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetRealTimeCrossRateTableAsHTML", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLResponse> GetRealTimeCrossRateTableAsHTMLAsync(currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLRequest request);
        
        // CODEGEN: Generating message contract since message GetSimpleRealTimeCrossRateTableAsHTMLRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetSimpleRealTimeCrossRateTableAsHTML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLResponse GetSimpleRealTimeCrossRateTableAsHTML(currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetSimpleRealTimeCrossRateTableAsHTML", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLResponse> GetSimpleRealTimeCrossRateTableAsHTMLAsync(currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRateTableAsHTMLRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateTableAsHTML", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLResponse GetHistoricalCrossRateTableAsHTML(currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateTableAsHTML", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLResponse> GetHistoricalCrossRateTableAsHTMLAsync(currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRateResponse GetHistoricalCrossRate(currencyClient.wsr.GetHistoricalCrossRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRate", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateResponse> GetHistoricalCrossRateAsync(currencyClient.wsr.GetHistoricalCrossRateRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRatesResponse GetHistoricalCrossRates(currencyClient.wsr.GetHistoricalCrossRatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRates", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesResponse> GetHistoricalCrossRatesAsync(currencyClient.wsr.GetHistoricalCrossRatesRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRateBidAskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateBidAsk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRateBidAskResponse GetHistoricalCrossRateBidAsk(currencyClient.wsr.GetHistoricalCrossRateBidAskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRateBidAsk", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateBidAskResponse> GetHistoricalCrossRateBidAskAsync(currencyClient.wsr.GetHistoricalCrossRateBidAskRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRatesBidAskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRatesBidAsk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRatesBidAskResponse GetHistoricalCrossRatesBidAsk(currencyClient.wsr.GetHistoricalCrossRatesBidAskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRatesBidAsk", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesBidAskResponse> GetHistoricalCrossRatesBidAskAsync(currencyClient.wsr.GetHistoricalCrossRatesBidAskRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRatesRangeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRatesRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRatesRangeResponse GetHistoricalCrossRatesRange(currencyClient.wsr.GetHistoricalCrossRatesRangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRatesRange", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesRangeResponse> GetHistoricalCrossRatesRangeAsync(currencyClient.wsr.GetHistoricalCrossRatesRangeRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRatesBidAskRangeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRatesBidAskRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeResponse GetHistoricalCrossRatesBidAskRange(currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRatesBidAskRange", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeResponse> GetHistoricalCrossRatesBidAskRangeAsync(currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRatesAsOfRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRatesAsOf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRatesAsOfResponse GetHistoricalCrossRatesAsOf(currencyClient.wsr.GetHistoricalCrossRatesAsOfRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRatesAsOf", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesAsOfResponse> GetHistoricalCrossRatesAsOfAsync(currencyClient.wsr.GetHistoricalCrossRatesAsOfRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalCrossRatesBidAskAsOfRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRatesBidAskAsOf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfResponse GetHistoricalCrossRatesBidAskAsOf(currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalCrossRatesBidAskAsOf", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfResponse> GetHistoricalCrossRatesBidAskAsOfAsync(currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfRequest request);
        
        // CODEGEN: Generating message contract since message GetOfficialCrossRateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetOfficialCrossRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetOfficialCrossRateResponse GetOfficialCrossRate(currencyClient.wsr.GetOfficialCrossRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetOfficialCrossRate", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRateResponse> GetOfficialCrossRateAsync(currencyClient.wsr.GetOfficialCrossRateRequest request);
        
        // CODEGEN: Generating message contract since message GetOfficialCrossRatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetOfficialCrossRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetOfficialCrossRatesResponse GetOfficialCrossRates(currencyClient.wsr.GetOfficialCrossRatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetOfficialCrossRates", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRatesResponse> GetOfficialCrossRatesAsync(currencyClient.wsr.GetOfficialCrossRatesRequest request);
        
        // CODEGEN: Generating message contract since message GetOfficialCrossRateBidAskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetOfficialCrossRateBidAsk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetOfficialCrossRateBidAskResponse GetOfficialCrossRateBidAsk(currencyClient.wsr.GetOfficialCrossRateBidAskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetOfficialCrossRateBidAsk", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRateBidAskResponse> GetOfficialCrossRateBidAskAsync(currencyClient.wsr.GetOfficialCrossRateBidAskRequest request);
        
        // CODEGEN: Generating message contract since message GetOfficialCrossRatesBidAskRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetOfficialCrossRatesBidAsk", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetOfficialCrossRatesBidAskResponse GetOfficialCrossRatesBidAsk(currencyClient.wsr.GetOfficialCrossRatesBidAskRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetOfficialCrossRatesBidAsk", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRatesBidAskResponse> GetOfficialCrossRatesBidAskAsync(currencyClient.wsr.GetOfficialCrossRatesBidAskRequest request);
        
        // CODEGEN: Generating message contract since message GetMutipleHistoricalCrossRatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetMutipleHistoricalCrossRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetMutipleHistoricalCrossRatesResponse GetMutipleHistoricalCrossRates(currencyClient.wsr.GetMutipleHistoricalCrossRatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetMutipleHistoricalCrossRates", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetMutipleHistoricalCrossRatesResponse> GetMutipleHistoricalCrossRatesAsync(currencyClient.wsr.GetMutipleHistoricalCrossRatesRequest request);
        
        // CODEGEN: Generating message contract since message GetAverageHistoricalCrossRatesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetAverageHistoricalCrossRates", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetAverageHistoricalCrossRatesResponse GetAverageHistoricalCrossRates(currencyClient.wsr.GetAverageHistoricalCrossRatesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetAverageHistoricalCrossRates", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetAverageHistoricalCrossRatesResponse> GetAverageHistoricalCrossRatesAsync(currencyClient.wsr.GetAverageHistoricalCrossRatesRequest request);
        
        // CODEGEN: Generating message contract since message GetAverageHistoricalCrossRateRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetAverageHistoricalCrossRate", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetAverageHistoricalCrossRateResponse GetAverageHistoricalCrossRate(currencyClient.wsr.GetAverageHistoricalCrossRateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetAverageHistoricalCrossRate", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetAverageHistoricalCrossRateResponse> GetAverageHistoricalCrossRateAsync(currencyClient.wsr.GetAverageHistoricalCrossRateRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalMonthlyCrossRatesRangeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalMonthlyCrossRatesRange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeResponse GetHistoricalMonthlyCrossRatesRange(currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalMonthlyCrossRatesRange", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeResponse> GetHistoricalMonthlyCrossRatesRangeAsync(currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeRequest request);
        
        // CODEGEN: Generating message contract since message GetCrossRateChangeRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCrossRateChange", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetCrossRateChangeResponse GetCrossRateChange(currencyClient.wsr.GetCrossRateChangeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCrossRateChange", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCrossRateChangeResponse> GetCrossRateChangeAsync(currencyClient.wsr.GetCrossRateChangeRequest request);
        
        // CODEGEN: Generating message contract since message GetCurrencyChartCustomRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyChartCustom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetCurrencyChartCustomResponse GetCurrencyChartCustom(currencyClient.wsr.GetCurrencyChartCustomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyChartCustom", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartCustomResponse> GetCurrencyChartCustomAsync(currencyClient.wsr.GetCurrencyChartCustomRequest request);
        
        // CODEGEN: Generating message contract since message GetCurrencyChartCustomBinaryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyChartCustomBinary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetCurrencyChartCustomBinaryResponse GetCurrencyChartCustomBinary(currencyClient.wsr.GetCurrencyChartCustomBinaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyChartCustomBinary", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartCustomBinaryResponse> GetCurrencyChartCustomBinaryAsync(currencyClient.wsr.GetCurrencyChartCustomBinaryRequest request);
        
        // CODEGEN: Generating message contract since message GetCurrencyChartRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyChart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetCurrencyChartResponse GetCurrencyChart(currencyClient.wsr.GetCurrencyChartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyChart", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartResponse> GetCurrencyChartAsync(currencyClient.wsr.GetCurrencyChartRequest request);
        
        // CODEGEN: Generating message contract since message GetCurrencyChartBinaryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyChartBinary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetCurrencyChartBinaryResponse GetCurrencyChartBinary(currencyClient.wsr.GetCurrencyChartBinaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyChartBinary", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartBinaryResponse> GetCurrencyChartBinaryAsync(currencyClient.wsr.GetCurrencyChartBinaryRequest request);
        
        // CODEGEN: Generating message contract since message GetCurrencyIntradayChartRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyIntradayChart", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetCurrencyIntradayChartResponse GetCurrencyIntradayChart(currencyClient.wsr.GetCurrencyIntradayChartRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyIntradayChart", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyIntradayChartResponse> GetCurrencyIntradayChartAsync(currencyClient.wsr.GetCurrencyIntradayChartRequest request);
        
        // CODEGEN: Generating message contract since message GetCurrencyIntradayChartCustomBinaryRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyIntradayChartCustomBinary", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryResponse GetCurrencyIntradayChartCustomBinary(currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyIntradayChartCustomBinary", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryResponse> GetCurrencyIntradayChartCustomBinaryAsync(currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryRequest request);
        
        // CODEGEN: Generating message contract since message GetCurrencyIntradayChartCustomRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyIntradayChartCustom", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetCurrencyIntradayChartCustomResponse GetCurrencyIntradayChartCustom(currencyClient.wsr.GetCurrencyIntradayChartCustomRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetCurrencyIntradayChartCustom", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyIntradayChartCustomResponse> GetCurrencyIntradayChartCustomAsync(currencyClient.wsr.GetCurrencyIntradayChartCustomRequest request);
        
        // CODEGEN: Generating message contract since message GetChartDesignRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetChartDesign", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetChartDesignResponse GetChartDesign(currencyClient.wsr.GetChartDesignRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetChartDesign", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetChartDesignResponse> GetChartDesignAsync(currencyClient.wsr.GetChartDesignRequest request);
        
        // CODEGEN: Generating message contract since message GetTickRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetTick", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetTickResponse GetTick(currencyClient.wsr.GetTickRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetTick", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetTickResponse> GetTickAsync(currencyClient.wsr.GetTickRequest request);
        
        // CODEGEN: Generating message contract since message GetTicksRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetTicks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetTicksResponse GetTicks(currencyClient.wsr.GetTicksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetTicks", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetTicksResponse> GetTicksAsync(currencyClient.wsr.GetTicksRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalTicksRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalTicks", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalTicksResponse GetHistoricalTicks(currencyClient.wsr.GetHistoricalTicksRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalTicks", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalTicksResponse> GetHistoricalTicksAsync(currencyClient.wsr.GetHistoricalTicksRequest request);
        
        // CODEGEN: Generating message contract since message GetHistoricalHighLowRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalHighLow", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetHistoricalHighLowResponse GetHistoricalHighLow(currencyClient.wsr.GetHistoricalHighLowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetHistoricalHighLow", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalHighLowResponse> GetHistoricalHighLowAsync(currencyClient.wsr.GetHistoricalHighLowRequest request);
        
        // CODEGEN: Generating message contract since message GetIntradayHighLowRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetIntradayHighLow", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Common))]
        currencyClient.wsr.GetIntradayHighLowResponse GetIntradayHighLow(currencyClient.wsr.GetIntradayHighLowRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.xignite.com/services/GetIntradayHighLow", ReplyAction="*")]
        System.Threading.Tasks.Task<currencyClient.wsr.GetIntradayHighLowResponse> GetIntradayHighLowAsync(currencyClient.wsr.GetIntradayHighLowRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Header : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string usernameField;
        
        private string passwordField;
        
        private string tracerField;
        
        private string iHeader_UsernameField;
        
        private string iHeader_PasswordField;
        
        private string iHeader_TracerField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
                this.RaisePropertyChanged("Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
                this.RaisePropertyChanged("Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Tracer {
            get {
                return this.tracerField;
            }
            set {
                this.tracerField = value;
                this.RaisePropertyChanged("Tracer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string IHeader_Username {
            get {
                return this.iHeader_UsernameField;
            }
            set {
                this.iHeader_UsernameField = value;
                this.RaisePropertyChanged("IHeader_Username");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string IHeader_Password {
            get {
                return this.iHeader_PasswordField;
            }
            set {
                this.iHeader_PasswordField = value;
                this.RaisePropertyChanged("IHeader_Password");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string IHeader_Tracer {
            get {
                return this.iHeader_TracerField;
            }
            set {
                this.iHeader_TracerField = value;
                this.RaisePropertyChanged("IHeader_Tracer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
                this.RaisePropertyChanged("AnyAttr");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Tick : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string timeField;
        
        private double midField;
        
        private double highField;
        
        private double lowField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double Mid {
            get {
                return this.midField;
            }
            set {
                this.midField = value;
                this.RaisePropertyChanged("Mid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
                this.RaisePropertyChanged("High");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
                this.RaisePropertyChanged("Low");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class FullCrossRateItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dateField;
        
        private double firstField;
        
        private double lastField;
        
        private double highField;
        
        private double lowField;
        
        private double bidField;
        
        private double askField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double First {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
                this.RaisePropertyChanged("First");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double Last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
                this.RaisePropertyChanged("Last");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
                this.RaisePropertyChanged("High");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
                this.RaisePropertyChanged("Low");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
                this.RaisePropertyChanged("Bid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
                this.RaisePropertyChanged("Ask");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CrossRateItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dateField;
        
        private double firstField;
        
        private double lastField;
        
        private double highField;
        
        private double lowField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double First {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
                this.RaisePropertyChanged("First");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double Last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
                this.RaisePropertyChanged("Last");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
                this.RaisePropertyChanged("High");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
                this.RaisePropertyChanged("Low");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Line : object, System.ComponentModel.INotifyPropertyChanged {
        
        private LineTypes lineTypeField;
        
        private string fromField;
        
        private string value1Field;
        
        private string value2Field;
        
        private string value3Field;
        
        private string value4Field;
        
        private string value5Field;
        
        private string value6Field;
        
        private string value7Field;
        
        private string value8Field;
        
        private string value9Field;
        
        private string value10Field;
        
        private string value11Field;
        
        private string value12Field;
        
        private string value13Field;
        
        private string value14Field;
        
        private string value15Field;
        
        private string value16Field;
        
        private string value17Field;
        
        private string value18Field;
        
        private string value19Field;
        
        private string value20Field;
        
        private string value21Field;
        
        private string value22Field;
        
        private string value23Field;
        
        private string value24Field;
        
        private string value25Field;
        
        private string value26Field;
        
        private string value27Field;
        
        private string value28Field;
        
        private string value29Field;
        
        private string value30Field;
        
        private string value31Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LineTypes LineType {
            get {
                return this.lineTypeField;
            }
            set {
                this.lineTypeField = value;
                this.RaisePropertyChanged("LineType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Value1 {
            get {
                return this.value1Field;
            }
            set {
                this.value1Field = value;
                this.RaisePropertyChanged("Value1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Value2 {
            get {
                return this.value2Field;
            }
            set {
                this.value2Field = value;
                this.RaisePropertyChanged("Value2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Value3 {
            get {
                return this.value3Field;
            }
            set {
                this.value3Field = value;
                this.RaisePropertyChanged("Value3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Value4 {
            get {
                return this.value4Field;
            }
            set {
                this.value4Field = value;
                this.RaisePropertyChanged("Value4");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string Value5 {
            get {
                return this.value5Field;
            }
            set {
                this.value5Field = value;
                this.RaisePropertyChanged("Value5");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Value6 {
            get {
                return this.value6Field;
            }
            set {
                this.value6Field = value;
                this.RaisePropertyChanged("Value6");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Value7 {
            get {
                return this.value7Field;
            }
            set {
                this.value7Field = value;
                this.RaisePropertyChanged("Value7");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Value8 {
            get {
                return this.value8Field;
            }
            set {
                this.value8Field = value;
                this.RaisePropertyChanged("Value8");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string Value9 {
            get {
                return this.value9Field;
            }
            set {
                this.value9Field = value;
                this.RaisePropertyChanged("Value9");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Value10 {
            get {
                return this.value10Field;
            }
            set {
                this.value10Field = value;
                this.RaisePropertyChanged("Value10");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string Value11 {
            get {
                return this.value11Field;
            }
            set {
                this.value11Field = value;
                this.RaisePropertyChanged("Value11");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string Value12 {
            get {
                return this.value12Field;
            }
            set {
                this.value12Field = value;
                this.RaisePropertyChanged("Value12");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string Value13 {
            get {
                return this.value13Field;
            }
            set {
                this.value13Field = value;
                this.RaisePropertyChanged("Value13");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public string Value14 {
            get {
                return this.value14Field;
            }
            set {
                this.value14Field = value;
                this.RaisePropertyChanged("Value14");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string Value15 {
            get {
                return this.value15Field;
            }
            set {
                this.value15Field = value;
                this.RaisePropertyChanged("Value15");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string Value16 {
            get {
                return this.value16Field;
            }
            set {
                this.value16Field = value;
                this.RaisePropertyChanged("Value16");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string Value17 {
            get {
                return this.value17Field;
            }
            set {
                this.value17Field = value;
                this.RaisePropertyChanged("Value17");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string Value18 {
            get {
                return this.value18Field;
            }
            set {
                this.value18Field = value;
                this.RaisePropertyChanged("Value18");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string Value19 {
            get {
                return this.value19Field;
            }
            set {
                this.value19Field = value;
                this.RaisePropertyChanged("Value19");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string Value20 {
            get {
                return this.value20Field;
            }
            set {
                this.value20Field = value;
                this.RaisePropertyChanged("Value20");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string Value21 {
            get {
                return this.value21Field;
            }
            set {
                this.value21Field = value;
                this.RaisePropertyChanged("Value21");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string Value22 {
            get {
                return this.value22Field;
            }
            set {
                this.value22Field = value;
                this.RaisePropertyChanged("Value22");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string Value23 {
            get {
                return this.value23Field;
            }
            set {
                this.value23Field = value;
                this.RaisePropertyChanged("Value23");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public string Value24 {
            get {
                return this.value24Field;
            }
            set {
                this.value24Field = value;
                this.RaisePropertyChanged("Value24");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string Value25 {
            get {
                return this.value25Field;
            }
            set {
                this.value25Field = value;
                this.RaisePropertyChanged("Value25");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string Value26 {
            get {
                return this.value26Field;
            }
            set {
                this.value26Field = value;
                this.RaisePropertyChanged("Value26");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string Value27 {
            get {
                return this.value27Field;
            }
            set {
                this.value27Field = value;
                this.RaisePropertyChanged("Value27");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string Value28 {
            get {
                return this.value28Field;
            }
            set {
                this.value28Field = value;
                this.RaisePropertyChanged("Value28");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public string Value29 {
            get {
                return this.value29Field;
            }
            set {
                this.value29Field = value;
                this.RaisePropertyChanged("Value29");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string Value30 {
            get {
                return this.value30Field;
            }
            set {
                this.value30Field = value;
                this.RaisePropertyChanged("Value30");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public string Value31 {
            get {
                return this.value31Field;
            }
            set {
                this.value31Field = value;
                this.RaisePropertyChanged("Value31");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum LineTypes {
        
        /// <remarks/>
        Header,
        
        /// <remarks/>
        Line,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Forward : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ForwardTypes typeField;
        
        private double bidField;
        
        private double askField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ForwardTypes Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
                this.RaisePropertyChanged("Bid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
                this.RaisePropertyChanged("Ask");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum ForwardTypes {
        
        /// <remarks/>
        Overnight,
        
        /// <remarks/>
        TomorrowNext,
        
        /// <remarks/>
        SpotNext,
        
        /// <remarks/>
        OneWeek,
        
        /// <remarks/>
        TwoWeek,
        
        /// <remarks/>
        ThreeWeek,
        
        /// <remarks/>
        OneMonth,
        
        /// <remarks/>
        TwoMonth,
        
        /// <remarks/>
        ThreeMonth,
        
        /// <remarks/>
        FourMonth,
        
        /// <remarks/>
        FiveMonth,
        
        /// <remarks/>
        SixMonth,
        
        /// <remarks/>
        SevenMonth,
        
        /// <remarks/>
        EightMonth,
        
        /// <remarks/>
        NineMonth,
        
        /// <remarks/>
        TenMonth,
        
        /// <remarks/>
        ElevenMonth,
        
        /// <remarks/>
        OneYear,
        
        /// <remarks/>
        TwoYear,
        
        /// <remarks/>
        ThreeYear,
        
        /// <remarks/>
        FourYear,
        
        /// <remarks/>
        FiveYear,
        
        /// <remarks/>
        SixYear,
        
        /// <remarks/>
        SevenYear,
        
        /// <remarks/>
        TenYear,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Currency : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Currencies symbolField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Currencies Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum Currencies {
        
        /// <remarks/>
        USD,
        
        /// <remarks/>
        AED,
        
        /// <remarks/>
        AFA,
        
        /// <remarks/>
        AFN,
        
        /// <remarks/>
        ALL,
        
        /// <remarks/>
        AMD,
        
        /// <remarks/>
        ANG,
        
        /// <remarks/>
        AOA,
        
        /// <remarks/>
        ARA,
        
        /// <remarks/>
        ARE,
        
        /// <remarks/>
        ARS,
        
        /// <remarks/>
        ATS,
        
        /// <remarks/>
        AUD,
        
        /// <remarks/>
        AUN,
        
        /// <remarks/>
        AWG,
        
        /// <remarks/>
        AZM,
        
        /// <remarks/>
        AZN,
        
        /// <remarks/>
        BAM,
        
        /// <remarks/>
        BBD,
        
        /// <remarks/>
        BDT,
        
        /// <remarks/>
        BEF,
        
        /// <remarks/>
        BEL,
        
        /// <remarks/>
        BGL,
        
        /// <remarks/>
        BGN,
        
        /// <remarks/>
        BHD,
        
        /// <remarks/>
        BIF,
        
        /// <remarks/>
        BMD,
        
        /// <remarks/>
        BND,
        
        /// <remarks/>
        BOB,
        
        /// <remarks/>
        BOV,
        
        /// <remarks/>
        BRC,
        
        /// <remarks/>
        BRE,
        
        /// <remarks/>
        BRI,
        
        /// <remarks/>
        BRL,
        
        /// <remarks/>
        BRR,
        
        /// <remarks/>
        BSD,
        
        /// <remarks/>
        BTN,
        
        /// <remarks/>
        BWP,
        
        /// <remarks/>
        BYN,
        
        /// <remarks/>
        BYR,
        
        /// <remarks/>
        BZD,
        
        /// <remarks/>
        CAD,
        
        /// <remarks/>
        CDF,
        
        /// <remarks/>
        CHF,
        
        /// <remarks/>
        CLF,
        
        /// <remarks/>
        CHK,
        
        /// <remarks/>
        CLP,
        
        /// <remarks/>
        CNY,
        
        /// <remarks/>
        CNH,
        
        /// <remarks/>
        COP,
        
        /// <remarks/>
        CRC,
        
        /// <remarks/>
        CSD,
        
        /// <remarks/>
        CUP,
        
        /// <remarks/>
        CVE,
        
        /// <remarks/>
        CYP,
        
        /// <remarks/>
        CZK,
        
        /// <remarks/>
        DEM,
        
        /// <remarks/>
        DJF,
        
        /// <remarks/>
        DKK,
        
        /// <remarks/>
        DOP,
        
        /// <remarks/>
        DOE,
        
        /// <remarks/>
        DOW,
        
        /// <remarks/>
        DZD,
        
        /// <remarks/>
        ECS,
        
        /// <remarks/>
        EEK,
        
        /// <remarks/>
        EGP,
        
        /// <remarks/>
        ERN,
        
        /// <remarks/>
        ESP,
        
        /// <remarks/>
        ETB,
        
        /// <remarks/>
        EUR,
        
        /// <remarks/>
        FIM,
        
        /// <remarks/>
        FJD,
        
        /// <remarks/>
        FKP,
        
        /// <remarks/>
        FRF,
        
        /// <remarks/>
        FRN,
        
        /// <remarks/>
        GBP,
        
        /// <remarks/>
        GEL,
        
        /// <remarks/>
        GGP,
        
        /// <remarks/>
        GHC,
        
        /// <remarks/>
        GHS,
        
        /// <remarks/>
        GIP,
        
        /// <remarks/>
        GMD,
        
        /// <remarks/>
        GNF,
        
        /// <remarks/>
        GRD,
        
        /// <remarks/>
        GTQ,
        
        /// <remarks/>
        GYD,
        
        /// <remarks/>
        HKD,
        
        /// <remarks/>
        HNL,
        
        /// <remarks/>
        HRD,
        
        /// <remarks/>
        HRK,
        
        /// <remarks/>
        HTG,
        
        /// <remarks/>
        HUF,
        
        /// <remarks/>
        IDR,
        
        /// <remarks/>
        IEP,
        
        /// <remarks/>
        ILS,
        
        /// <remarks/>
        IMP,
        
        /// <remarks/>
        INR,
        
        /// <remarks/>
        IQD,
        
        /// <remarks/>
        IRR,
        
        /// <remarks/>
        ISK,
        
        /// <remarks/>
        ITL,
        
        /// <remarks/>
        JEP,
        
        /// <remarks/>
        JMD,
        
        /// <remarks/>
        JOD,
        
        /// <remarks/>
        JPY,
        
        /// <remarks/>
        KES,
        
        /// <remarks/>
        KGS,
        
        /// <remarks/>
        KHR,
        
        /// <remarks/>
        KMF,
        
        /// <remarks/>
        KPW,
        
        /// <remarks/>
        KRU,
        
        /// <remarks/>
        KRW,
        
        /// <remarks/>
        KWD,
        
        /// <remarks/>
        KYD,
        
        /// <remarks/>
        KZT,
        
        /// <remarks/>
        LAK,
        
        /// <remarks/>
        LBP,
        
        /// <remarks/>
        LKR,
        
        /// <remarks/>
        LRD,
        
        /// <remarks/>
        LSL,
        
        /// <remarks/>
        LTL,
        
        /// <remarks/>
        LUF,
        
        /// <remarks/>
        LVL,
        
        /// <remarks/>
        LYD,
        
        /// <remarks/>
        M5P,
        
        /// <remarks/>
        MAD,
        
        /// <remarks/>
        MAL,
        
        /// <remarks/>
        MDL,
        
        /// <remarks/>
        MFG,
        
        /// <remarks/>
        MGA,
        
        /// <remarks/>
        MKD,
        
        /// <remarks/>
        MMK,
        
        /// <remarks/>
        MNT,
        
        /// <remarks/>
        MOP,
        
        /// <remarks/>
        MRO,
        
        /// <remarks/>
        MTL,
        
        /// <remarks/>
        MTP,
        
        /// <remarks/>
        MUR,
        
        /// <remarks/>
        MVR,
        
        /// <remarks/>
        MWK,
        
        /// <remarks/>
        MXN,
        
        /// <remarks/>
        MXP,
        
        /// <remarks/>
        MXV,
        
        /// <remarks/>
        MYR,
        
        /// <remarks/>
        MZM,
        
        /// <remarks/>
        MZN,
        
        /// <remarks/>
        NAD,
        
        /// <remarks/>
        NBL,
        
        /// <remarks/>
        NGN,
        
        /// <remarks/>
        NIC,
        
        /// <remarks/>
        NIO,
        
        /// <remarks/>
        NLG,
        
        /// <remarks/>
        NOK,
        
        /// <remarks/>
        NPR,
        
        /// <remarks/>
        NSO,
        
        /// <remarks/>
        NZD,
        
        /// <remarks/>
        OMR,
        
        /// <remarks/>
        OSO,
        
        /// <remarks/>
        PAB,
        
        /// <remarks/>
        PEI,
        
        /// <remarks/>
        PEN,
        
        /// <remarks/>
        PES,
        
        /// <remarks/>
        PGK,
        
        /// <remarks/>
        PHP,
        
        /// <remarks/>
        PKR,
        
        /// <remarks/>
        PLN,
        
        /// <remarks/>
        PLZ,
        
        /// <remarks/>
        PTE,
        
        /// <remarks/>
        PYG,
        
        /// <remarks/>
        QAR,
        
        /// <remarks/>
        ROL,
        
        /// <remarks/>
        RON,
        
        /// <remarks/>
        RSD,
        
        /// <remarks/>
        RUB,
        
        /// <remarks/>
        RUR,
        
        /// <remarks/>
        RWF,
        
        /// <remarks/>
        SAR,
        
        /// <remarks/>
        SBD,
        
        /// <remarks/>
        SCR,
        
        /// <remarks/>
        SDD,
        
        /// <remarks/>
        SDG,
        
        /// <remarks/>
        SDP,
        
        /// <remarks/>
        SDR,
        
        /// <remarks/>
        SEK,
        
        /// <remarks/>
        SGD,
        
        /// <remarks/>
        SHP,
        
        /// <remarks/>
        SIT,
        
        /// <remarks/>
        SKK,
        
        /// <remarks/>
        SLL,
        
        /// <remarks/>
        SOS,
        
        /// <remarks/>
        SPL,
        
        /// <remarks/>
        SRD,
        
        /// <remarks/>
        SRG,
        
        /// <remarks/>
        STD,
        
        /// <remarks/>
        SUR,
        
        /// <remarks/>
        SVC,
        
        /// <remarks/>
        SYP,
        
        /// <remarks/>
        SZL,
        
        /// <remarks/>
        THB,
        
        /// <remarks/>
        TJR,
        
        /// <remarks/>
        TJS,
        
        /// <remarks/>
        TMM,
        
        /// <remarks/>
        TMT,
        
        /// <remarks/>
        TND,
        
        /// <remarks/>
        TOP,
        
        /// <remarks/>
        TRL,
        
        /// <remarks/>
        TRY,
        
        /// <remarks/>
        TTD,
        
        /// <remarks/>
        TVD,
        
        /// <remarks/>
        TWD,
        
        /// <remarks/>
        TZS,
        
        /// <remarks/>
        UAH,
        
        /// <remarks/>
        UGX,
        
        /// <remarks/>
        UNK,
        
        /// <remarks/>
        UYP,
        
        /// <remarks/>
        UYU,
        
        /// <remarks/>
        UZS,
        
        /// <remarks/>
        VEB,
        
        /// <remarks/>
        VEF,
        
        /// <remarks/>
        VND,
        
        /// <remarks/>
        VRL,
        
        /// <remarks/>
        VRN,
        
        /// <remarks/>
        VUV,
        
        /// <remarks/>
        WST,
        
        /// <remarks/>
        XAF,
        
        /// <remarks/>
        XAG,
        
        /// <remarks/>
        XAU,
        
        /// <remarks/>
        XCD,
        
        /// <remarks/>
        XDR,
        
        /// <remarks/>
        XEU,
        
        /// <remarks/>
        XOF,
        
        /// <remarks/>
        XPD,
        
        /// <remarks/>
        XPF,
        
        /// <remarks/>
        XPT,
        
        /// <remarks/>
        YER,
        
        /// <remarks/>
        YUD,
        
        /// <remarks/>
        YUM,
        
        /// <remarks/>
        ZAL,
        
        /// <remarks/>
        ZAR,
        
        /// <remarks/>
        ZMK,
        
        /// <remarks/>
        ZMW,
        
        /// <remarks/>
        ZRN,
        
        /// <remarks/>
        ZRZ,
        
        /// <remarks/>
        ZWD,
        
        /// <remarks/>
        ZWL,
        
        /// <remarks/>
        BAD,
        
        /// <remarks/>
        NOCURRENCY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class OfficialCurrency : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string symbolField;
        
        private bool activeField;
        
        private string messageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("Active");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class OfficialCountry : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string countryField;
        
        private OfficialCurrency[] officialCurrenciesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
                this.RaisePropertyChanged("Country");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public OfficialCurrency[] OfficialCurrencies {
            get {
                return this.officialCurrenciesField;
            }
            set {
                this.officialCurrenciesField = value;
                this.RaisePropertyChanged("OfficialCurrencies");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Country : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CurrencyItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string symbolField;
        
        private string nameField;
        
        private string pluralField;
        
        private bool supportedField;
        
        private bool activeField;
        
        private string activeMessageField;
        
        private Country[] countriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Plural {
            get {
                return this.pluralField;
            }
            set {
                this.pluralField = value;
                this.RaisePropertyChanged("Plural");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Supported {
            get {
                return this.supportedField;
            }
            set {
                this.supportedField = value;
                this.RaisePropertyChanged("Supported");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public bool Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("Active");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string ActiveMessage {
            get {
                return this.activeMessageField;
            }
            set {
                this.activeMessageField = value;
                this.RaisePropertyChanged("ActiveMessage");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=6)]
        public Country[] Countries {
            get {
                return this.countriesField;
            }
            set {
                this.countriesField = value;
                this.RaisePropertyChanged("Countries");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HighLowTick))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Ticks))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SingleTick))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChartBinary))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StockChart))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyChartIntraday))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HistoricalChart))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ChartDesign))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Change))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CrossRateChange))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(AverageHistoricalCrossRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MultipleHistoricalCrossRates))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FullHistoricalCrossRates))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HistoricalCrossRates))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FullHistoricalCrossRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HistoricalCrossRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HTMLCrossRateTable))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Report))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CrossRateTableLineWithBidAsk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CrossRateTableWithBidAsk))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExchangeRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CrossRateTableLine))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CrossRateTable))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CrossRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ForwardRate))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ExchangeConversion))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UnitOfAccount))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(OfficialRates))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyList))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Common : object, System.ComponentModel.INotifyPropertyChanged {
        
        private OutcomeTypes outcomeField;
        
        private string messageField;
        
        private string identityField;
        
        private double delayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public OutcomeTypes Outcome {
            get {
                return this.outcomeField;
            }
            set {
                this.outcomeField = value;
                this.RaisePropertyChanged("Outcome");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
                this.RaisePropertyChanged("Message");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Identity {
            get {
                return this.identityField;
            }
            set {
                this.identityField = value;
                this.RaisePropertyChanged("Identity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double Delay {
            get {
                return this.delayField;
            }
            set {
                this.delayField = value;
                this.RaisePropertyChanged("Delay");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum OutcomeTypes {
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        SystemError,
        
        /// <remarks/>
        RequestError,
        
        /// <remarks/>
        RegistrationError,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class HighLowTick : Common {
        
        private string symbolField;
        
        private HighLowTickTypes typeField;
        
        private SingleTick highField;
        
        private SingleTick lowField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public HighLowTickTypes Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public SingleTick High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
                this.RaisePropertyChanged("High");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public SingleTick Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
                this.RaisePropertyChanged("Low");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum HighLowTickTypes {
        
        /// <remarks/>
        High,
        
        /// <remarks/>
        Low,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class SingleTick : Common {
        
        private string symbolField;
        
        private string timeField;
        
        private double bidField;
        
        private double askField;
        
        private double midField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
                this.RaisePropertyChanged("Bid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
                this.RaisePropertyChanged("Ask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double Mid {
            get {
                return this.midField;
            }
            set {
                this.midField = value;
                this.RaisePropertyChanged("Mid");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Ticks : Common {
        
        private string symbolField;
        
        private Tick[] ticks1Field;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute("Ticks", Order=1)]
        public Tick[] Ticks1 {
            get {
                return this.ticks1Field;
            }
            set {
                this.ticks1Field = value;
                this.RaisePropertyChanged("Ticks1");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ChartBinary : Common {
        
        private byte[] byteArrayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] ByteArray {
            get {
                return this.byteArrayField;
            }
            set {
                this.byteArrayField = value;
                this.RaisePropertyChanged("ByteArray");
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CurrencyChartIntraday))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HistoricalChart))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class StockChart : Common {
        
        private ChartDesign designField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ChartDesign Design {
            get {
                return this.designField;
            }
            set {
                this.designField = value;
                this.RaisePropertyChanged("Design");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ChartDesign : Common {
        
        private bool secureField;
        
        private string textTitleField;
        
        private string textHeaderField;
        
        private string textFooterField;
        
        private string textPriceLineField;
        
        private string textVolumeBarField;
        
        private string textHighestField;
        
        private string textLowestField;
        
        private string textOpenField;
        
        private string textCloseField;
        
        private string textUpField;
        
        private string textDownField;
        
        private string colorBackgroundField;
        
        private string colorBackWallField;
        
        private string colorVolumeBackWallField;
        
        private bool showVolumeBackWallField;
        
        private string colorHighlightField;
        
        private string colorPriceLineField;
        
        private string colorVolumeBarField;
        
        private string colorVolumeBarFillField;
        
        private string colorHighField;
        
        private string colorStickUpField;
        
        private string colorStickLowField;
        
        private string colorConstantField;
        
        private string colorLowField;
        
        private string colorPointField;
        
        private string colorTitleField;
        
        private string colorFooterField;
        
        private string colorHeaderField;
        
        private string colorAxisField;
        
        private string colorGridField;
        
        private string colorFontsField;
        
        private string colorStripeField;
        
        private string colorOpenField;
        
        private string colorCloseField;
        
        private string colorVerticalGridField;
        
        private string colorHorizontalGridField;
        
        private string colorUpField;
        
        private string colorDownField;
        
        private string colorHighLowLineField;
        
        private string colorCollectionField;
        
        private LinePattern gridHorizontalStyleField;
        
        private LinePattern gridVerticalStyleField;
        
        private int gridHorizontalWidthField;
        
        private int gridVerticalWidthField;
        
        private string colorFrameField;
        
        private string frameBorderField;
        
        private string formatPriceLineField;
        
        private string formatVolumeField;
        
        private string formatDateField;
        
        private bool gradeBackgroundField;
        
        private bool gradeBackwallField;
        
        private string waterMarkField;
        
        private int waterMarkTopMarginField;
        
        private int waterMarkLeftMarginField;
        
        private int waterMarkTransparencyField;
        
        private float pointSizeField;
        
        private bool stackVariationLabelsField;
        
        private bool showAxisLabelInLegendField;
        
        private int lineWidthField;
        
        private int splitPercentField;
        
        private bool showHighField;
        
        private bool showLowField;
        
        private bool showOpenField;
        
        private bool showCloseField;
        
        private bool showVolumeField;
        
        private bool showUpVariationField;
        
        private bool showDownVariationField;
        
        private bool showLegendField;
        
        private int variationYearField;
        
        private int volumeDividerField;
        
        private int volumeTextOffsetField;
        
        private int priceTextOffsetField;
        
        private ImageFrameType frameTypeField;
        
        private PredefinedProjection projectionField;
        
        private int marginTopField;
        
        private int marginBottomField;
        
        private int marginLeftField;
        
        private int marginRightField;
        
        private string fontFamilyField;
        
        private int fontSizeHeaderField;
        
        private int fontSizeFooterField;
        
        private double heightField;
        
        private double widthField;
        
        private int zoomPercentField;
        
        private bool legendBoxField;
        
        private string colorLegendBackgroundField;
        
        private string colorLegendBorderField;
        
        private int legendVerticalPositionField;
        
        private int legendHorizontalPositionField;
        
        private bool reloadField;
        
        private bool showPriceChartLabelsField;
        
        private TickPeriod tickPrecisionField;
        
        private int tickPeriodsField;
        
        private HorzAlign waterMarkHorizontalAlignField;
        
        private PredefinedLightModel lightSchemeField;
        
        private int fontSizeLegendField;
        
        private int fontSizeAxesField;
        
        private int fontSizeTitleField;
        
        private int daysForHourDisplayField;
        
        private int daysForDayDisplayField;
        
        private int daysForWeekDisplayField;
        
        private int daysForBiWeeklyDisplayField;
        
        private int daysForMonthDisplayField;
        
        private int daysForQuarterDisplayField;
        
        private int daysForSemiAnnualDisplayField;
        
        private int daysForAnnualDisplayField;
        
        private int daysForBiAnnualDisplayField;
        
        private int daysForPentaAnnualDisplayField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public bool Secure {
            get {
                return this.secureField;
            }
            set {
                this.secureField = value;
                this.RaisePropertyChanged("Secure");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string TextTitle {
            get {
                return this.textTitleField;
            }
            set {
                this.textTitleField = value;
                this.RaisePropertyChanged("TextTitle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string TextHeader {
            get {
                return this.textHeaderField;
            }
            set {
                this.textHeaderField = value;
                this.RaisePropertyChanged("TextHeader");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TextFooter {
            get {
                return this.textFooterField;
            }
            set {
                this.textFooterField = value;
                this.RaisePropertyChanged("TextFooter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string TextPriceLine {
            get {
                return this.textPriceLineField;
            }
            set {
                this.textPriceLineField = value;
                this.RaisePropertyChanged("TextPriceLine");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string TextVolumeBar {
            get {
                return this.textVolumeBarField;
            }
            set {
                this.textVolumeBarField = value;
                this.RaisePropertyChanged("TextVolumeBar");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string TextHighest {
            get {
                return this.textHighestField;
            }
            set {
                this.textHighestField = value;
                this.RaisePropertyChanged("TextHighest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string TextLowest {
            get {
                return this.textLowestField;
            }
            set {
                this.textLowestField = value;
                this.RaisePropertyChanged("TextLowest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string TextOpen {
            get {
                return this.textOpenField;
            }
            set {
                this.textOpenField = value;
                this.RaisePropertyChanged("TextOpen");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string TextClose {
            get {
                return this.textCloseField;
            }
            set {
                this.textCloseField = value;
                this.RaisePropertyChanged("TextClose");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string TextUp {
            get {
                return this.textUpField;
            }
            set {
                this.textUpField = value;
                this.RaisePropertyChanged("TextUp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string TextDown {
            get {
                return this.textDownField;
            }
            set {
                this.textDownField = value;
                this.RaisePropertyChanged("TextDown");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public string ColorBackground {
            get {
                return this.colorBackgroundField;
            }
            set {
                this.colorBackgroundField = value;
                this.RaisePropertyChanged("ColorBackground");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=13)]
        public string ColorBackWall {
            get {
                return this.colorBackWallField;
            }
            set {
                this.colorBackWallField = value;
                this.RaisePropertyChanged("ColorBackWall");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=14)]
        public string ColorVolumeBackWall {
            get {
                return this.colorVolumeBackWallField;
            }
            set {
                this.colorVolumeBackWallField = value;
                this.RaisePropertyChanged("ColorVolumeBackWall");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=15)]
        public bool ShowVolumeBackWall {
            get {
                return this.showVolumeBackWallField;
            }
            set {
                this.showVolumeBackWallField = value;
                this.RaisePropertyChanged("ShowVolumeBackWall");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=16)]
        public string ColorHighlight {
            get {
                return this.colorHighlightField;
            }
            set {
                this.colorHighlightField = value;
                this.RaisePropertyChanged("ColorHighlight");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=17)]
        public string ColorPriceLine {
            get {
                return this.colorPriceLineField;
            }
            set {
                this.colorPriceLineField = value;
                this.RaisePropertyChanged("ColorPriceLine");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=18)]
        public string ColorVolumeBar {
            get {
                return this.colorVolumeBarField;
            }
            set {
                this.colorVolumeBarField = value;
                this.RaisePropertyChanged("ColorVolumeBar");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=19)]
        public string ColorVolumeBarFill {
            get {
                return this.colorVolumeBarFillField;
            }
            set {
                this.colorVolumeBarFillField = value;
                this.RaisePropertyChanged("ColorVolumeBarFill");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=20)]
        public string ColorHigh {
            get {
                return this.colorHighField;
            }
            set {
                this.colorHighField = value;
                this.RaisePropertyChanged("ColorHigh");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=21)]
        public string ColorStickUp {
            get {
                return this.colorStickUpField;
            }
            set {
                this.colorStickUpField = value;
                this.RaisePropertyChanged("ColorStickUp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=22)]
        public string ColorStickLow {
            get {
                return this.colorStickLowField;
            }
            set {
                this.colorStickLowField = value;
                this.RaisePropertyChanged("ColorStickLow");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=23)]
        public string ColorConstant {
            get {
                return this.colorConstantField;
            }
            set {
                this.colorConstantField = value;
                this.RaisePropertyChanged("ColorConstant");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=24)]
        public string ColorLow {
            get {
                return this.colorLowField;
            }
            set {
                this.colorLowField = value;
                this.RaisePropertyChanged("ColorLow");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=25)]
        public string ColorPoint {
            get {
                return this.colorPointField;
            }
            set {
                this.colorPointField = value;
                this.RaisePropertyChanged("ColorPoint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=26)]
        public string ColorTitle {
            get {
                return this.colorTitleField;
            }
            set {
                this.colorTitleField = value;
                this.RaisePropertyChanged("ColorTitle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=27)]
        public string ColorFooter {
            get {
                return this.colorFooterField;
            }
            set {
                this.colorFooterField = value;
                this.RaisePropertyChanged("ColorFooter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=28)]
        public string ColorHeader {
            get {
                return this.colorHeaderField;
            }
            set {
                this.colorHeaderField = value;
                this.RaisePropertyChanged("ColorHeader");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=29)]
        public string ColorAxis {
            get {
                return this.colorAxisField;
            }
            set {
                this.colorAxisField = value;
                this.RaisePropertyChanged("ColorAxis");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=30)]
        public string ColorGrid {
            get {
                return this.colorGridField;
            }
            set {
                this.colorGridField = value;
                this.RaisePropertyChanged("ColorGrid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=31)]
        public string ColorFonts {
            get {
                return this.colorFontsField;
            }
            set {
                this.colorFontsField = value;
                this.RaisePropertyChanged("ColorFonts");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=32)]
        public string ColorStripe {
            get {
                return this.colorStripeField;
            }
            set {
                this.colorStripeField = value;
                this.RaisePropertyChanged("ColorStripe");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=33)]
        public string ColorOpen {
            get {
                return this.colorOpenField;
            }
            set {
                this.colorOpenField = value;
                this.RaisePropertyChanged("ColorOpen");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=34)]
        public string ColorClose {
            get {
                return this.colorCloseField;
            }
            set {
                this.colorCloseField = value;
                this.RaisePropertyChanged("ColorClose");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=35)]
        public string ColorVerticalGrid {
            get {
                return this.colorVerticalGridField;
            }
            set {
                this.colorVerticalGridField = value;
                this.RaisePropertyChanged("ColorVerticalGrid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=36)]
        public string ColorHorizontalGrid {
            get {
                return this.colorHorizontalGridField;
            }
            set {
                this.colorHorizontalGridField = value;
                this.RaisePropertyChanged("ColorHorizontalGrid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=37)]
        public string ColorUp {
            get {
                return this.colorUpField;
            }
            set {
                this.colorUpField = value;
                this.RaisePropertyChanged("ColorUp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=38)]
        public string ColorDown {
            get {
                return this.colorDownField;
            }
            set {
                this.colorDownField = value;
                this.RaisePropertyChanged("ColorDown");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=39)]
        public string ColorHighLowLine {
            get {
                return this.colorHighLowLineField;
            }
            set {
                this.colorHighLowLineField = value;
                this.RaisePropertyChanged("ColorHighLowLine");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=40)]
        public string ColorCollection {
            get {
                return this.colorCollectionField;
            }
            set {
                this.colorCollectionField = value;
                this.RaisePropertyChanged("ColorCollection");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=41)]
        public LinePattern GridHorizontalStyle {
            get {
                return this.gridHorizontalStyleField;
            }
            set {
                this.gridHorizontalStyleField = value;
                this.RaisePropertyChanged("GridHorizontalStyle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=42)]
        public LinePattern GridVerticalStyle {
            get {
                return this.gridVerticalStyleField;
            }
            set {
                this.gridVerticalStyleField = value;
                this.RaisePropertyChanged("GridVerticalStyle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=43)]
        public int GridHorizontalWidth {
            get {
                return this.gridHorizontalWidthField;
            }
            set {
                this.gridHorizontalWidthField = value;
                this.RaisePropertyChanged("GridHorizontalWidth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=44)]
        public int GridVerticalWidth {
            get {
                return this.gridVerticalWidthField;
            }
            set {
                this.gridVerticalWidthField = value;
                this.RaisePropertyChanged("GridVerticalWidth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=45)]
        public string ColorFrame {
            get {
                return this.colorFrameField;
            }
            set {
                this.colorFrameField = value;
                this.RaisePropertyChanged("ColorFrame");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=46)]
        public string FrameBorder {
            get {
                return this.frameBorderField;
            }
            set {
                this.frameBorderField = value;
                this.RaisePropertyChanged("FrameBorder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=47)]
        public string FormatPriceLine {
            get {
                return this.formatPriceLineField;
            }
            set {
                this.formatPriceLineField = value;
                this.RaisePropertyChanged("FormatPriceLine");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=48)]
        public string FormatVolume {
            get {
                return this.formatVolumeField;
            }
            set {
                this.formatVolumeField = value;
                this.RaisePropertyChanged("FormatVolume");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=49)]
        public string FormatDate {
            get {
                return this.formatDateField;
            }
            set {
                this.formatDateField = value;
                this.RaisePropertyChanged("FormatDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=50)]
        public bool GradeBackground {
            get {
                return this.gradeBackgroundField;
            }
            set {
                this.gradeBackgroundField = value;
                this.RaisePropertyChanged("GradeBackground");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=51)]
        public bool GradeBackwall {
            get {
                return this.gradeBackwallField;
            }
            set {
                this.gradeBackwallField = value;
                this.RaisePropertyChanged("GradeBackwall");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=52)]
        public string WaterMark {
            get {
                return this.waterMarkField;
            }
            set {
                this.waterMarkField = value;
                this.RaisePropertyChanged("WaterMark");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=53)]
        public int WaterMarkTopMargin {
            get {
                return this.waterMarkTopMarginField;
            }
            set {
                this.waterMarkTopMarginField = value;
                this.RaisePropertyChanged("WaterMarkTopMargin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=54)]
        public int WaterMarkLeftMargin {
            get {
                return this.waterMarkLeftMarginField;
            }
            set {
                this.waterMarkLeftMarginField = value;
                this.RaisePropertyChanged("WaterMarkLeftMargin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=55)]
        public int WaterMarkTransparency {
            get {
                return this.waterMarkTransparencyField;
            }
            set {
                this.waterMarkTransparencyField = value;
                this.RaisePropertyChanged("WaterMarkTransparency");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=56)]
        public float PointSize {
            get {
                return this.pointSizeField;
            }
            set {
                this.pointSizeField = value;
                this.RaisePropertyChanged("PointSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=57)]
        public bool StackVariationLabels {
            get {
                return this.stackVariationLabelsField;
            }
            set {
                this.stackVariationLabelsField = value;
                this.RaisePropertyChanged("StackVariationLabels");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=58)]
        public bool ShowAxisLabelInLegend {
            get {
                return this.showAxisLabelInLegendField;
            }
            set {
                this.showAxisLabelInLegendField = value;
                this.RaisePropertyChanged("ShowAxisLabelInLegend");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=59)]
        public int LineWidth {
            get {
                return this.lineWidthField;
            }
            set {
                this.lineWidthField = value;
                this.RaisePropertyChanged("LineWidth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=60)]
        public int SplitPercent {
            get {
                return this.splitPercentField;
            }
            set {
                this.splitPercentField = value;
                this.RaisePropertyChanged("SplitPercent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=61)]
        public bool ShowHigh {
            get {
                return this.showHighField;
            }
            set {
                this.showHighField = value;
                this.RaisePropertyChanged("ShowHigh");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=62)]
        public bool ShowLow {
            get {
                return this.showLowField;
            }
            set {
                this.showLowField = value;
                this.RaisePropertyChanged("ShowLow");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=63)]
        public bool ShowOpen {
            get {
                return this.showOpenField;
            }
            set {
                this.showOpenField = value;
                this.RaisePropertyChanged("ShowOpen");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=64)]
        public bool ShowClose {
            get {
                return this.showCloseField;
            }
            set {
                this.showCloseField = value;
                this.RaisePropertyChanged("ShowClose");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=65)]
        public bool ShowVolume {
            get {
                return this.showVolumeField;
            }
            set {
                this.showVolumeField = value;
                this.RaisePropertyChanged("ShowVolume");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=66)]
        public bool ShowUpVariation {
            get {
                return this.showUpVariationField;
            }
            set {
                this.showUpVariationField = value;
                this.RaisePropertyChanged("ShowUpVariation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=67)]
        public bool ShowDownVariation {
            get {
                return this.showDownVariationField;
            }
            set {
                this.showDownVariationField = value;
                this.RaisePropertyChanged("ShowDownVariation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=68)]
        public bool ShowLegend {
            get {
                return this.showLegendField;
            }
            set {
                this.showLegendField = value;
                this.RaisePropertyChanged("ShowLegend");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=69)]
        public int VariationYear {
            get {
                return this.variationYearField;
            }
            set {
                this.variationYearField = value;
                this.RaisePropertyChanged("VariationYear");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=70)]
        public int VolumeDivider {
            get {
                return this.volumeDividerField;
            }
            set {
                this.volumeDividerField = value;
                this.RaisePropertyChanged("VolumeDivider");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=71)]
        public int VolumeTextOffset {
            get {
                return this.volumeTextOffsetField;
            }
            set {
                this.volumeTextOffsetField = value;
                this.RaisePropertyChanged("VolumeTextOffset");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=72)]
        public int PriceTextOffset {
            get {
                return this.priceTextOffsetField;
            }
            set {
                this.priceTextOffsetField = value;
                this.RaisePropertyChanged("PriceTextOffset");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=73)]
        public ImageFrameType FrameType {
            get {
                return this.frameTypeField;
            }
            set {
                this.frameTypeField = value;
                this.RaisePropertyChanged("FrameType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=74)]
        public PredefinedProjection Projection {
            get {
                return this.projectionField;
            }
            set {
                this.projectionField = value;
                this.RaisePropertyChanged("Projection");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=75)]
        public int MarginTop {
            get {
                return this.marginTopField;
            }
            set {
                this.marginTopField = value;
                this.RaisePropertyChanged("MarginTop");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=76)]
        public int MarginBottom {
            get {
                return this.marginBottomField;
            }
            set {
                this.marginBottomField = value;
                this.RaisePropertyChanged("MarginBottom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=77)]
        public int MarginLeft {
            get {
                return this.marginLeftField;
            }
            set {
                this.marginLeftField = value;
                this.RaisePropertyChanged("MarginLeft");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=78)]
        public int MarginRight {
            get {
                return this.marginRightField;
            }
            set {
                this.marginRightField = value;
                this.RaisePropertyChanged("MarginRight");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=79)]
        public string FontFamily {
            get {
                return this.fontFamilyField;
            }
            set {
                this.fontFamilyField = value;
                this.RaisePropertyChanged("FontFamily");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=80)]
        public int FontSizeHeader {
            get {
                return this.fontSizeHeaderField;
            }
            set {
                this.fontSizeHeaderField = value;
                this.RaisePropertyChanged("FontSizeHeader");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=81)]
        public int FontSizeFooter {
            get {
                return this.fontSizeFooterField;
            }
            set {
                this.fontSizeFooterField = value;
                this.RaisePropertyChanged("FontSizeFooter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=82)]
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
                this.RaisePropertyChanged("Height");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=83)]
        public double Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
                this.RaisePropertyChanged("Width");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=84)]
        public int ZoomPercent {
            get {
                return this.zoomPercentField;
            }
            set {
                this.zoomPercentField = value;
                this.RaisePropertyChanged("ZoomPercent");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=85)]
        public bool LegendBox {
            get {
                return this.legendBoxField;
            }
            set {
                this.legendBoxField = value;
                this.RaisePropertyChanged("LegendBox");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=86)]
        public string ColorLegendBackground {
            get {
                return this.colorLegendBackgroundField;
            }
            set {
                this.colorLegendBackgroundField = value;
                this.RaisePropertyChanged("ColorLegendBackground");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=87)]
        public string ColorLegendBorder {
            get {
                return this.colorLegendBorderField;
            }
            set {
                this.colorLegendBorderField = value;
                this.RaisePropertyChanged("ColorLegendBorder");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=88)]
        public int LegendVerticalPosition {
            get {
                return this.legendVerticalPositionField;
            }
            set {
                this.legendVerticalPositionField = value;
                this.RaisePropertyChanged("LegendVerticalPosition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=89)]
        public int LegendHorizontalPosition {
            get {
                return this.legendHorizontalPositionField;
            }
            set {
                this.legendHorizontalPositionField = value;
                this.RaisePropertyChanged("LegendHorizontalPosition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=90)]
        public bool Reload {
            get {
                return this.reloadField;
            }
            set {
                this.reloadField = value;
                this.RaisePropertyChanged("Reload");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=91)]
        public bool ShowPriceChartLabels {
            get {
                return this.showPriceChartLabelsField;
            }
            set {
                this.showPriceChartLabelsField = value;
                this.RaisePropertyChanged("ShowPriceChartLabels");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=92)]
        public TickPeriod TickPrecision {
            get {
                return this.tickPrecisionField;
            }
            set {
                this.tickPrecisionField = value;
                this.RaisePropertyChanged("TickPrecision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=93)]
        public int TickPeriods {
            get {
                return this.tickPeriodsField;
            }
            set {
                this.tickPeriodsField = value;
                this.RaisePropertyChanged("TickPeriods");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=94)]
        public HorzAlign WaterMarkHorizontalAlign {
            get {
                return this.waterMarkHorizontalAlignField;
            }
            set {
                this.waterMarkHorizontalAlignField = value;
                this.RaisePropertyChanged("WaterMarkHorizontalAlign");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=95)]
        public PredefinedLightModel LightScheme {
            get {
                return this.lightSchemeField;
            }
            set {
                this.lightSchemeField = value;
                this.RaisePropertyChanged("LightScheme");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=96)]
        public int FontSizeLegend {
            get {
                return this.fontSizeLegendField;
            }
            set {
                this.fontSizeLegendField = value;
                this.RaisePropertyChanged("FontSizeLegend");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=97)]
        public int FontSizeAxes {
            get {
                return this.fontSizeAxesField;
            }
            set {
                this.fontSizeAxesField = value;
                this.RaisePropertyChanged("FontSizeAxes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=98)]
        public int FontSizeTitle {
            get {
                return this.fontSizeTitleField;
            }
            set {
                this.fontSizeTitleField = value;
                this.RaisePropertyChanged("FontSizeTitle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=99)]
        public int DaysForHourDisplay {
            get {
                return this.daysForHourDisplayField;
            }
            set {
                this.daysForHourDisplayField = value;
                this.RaisePropertyChanged("DaysForHourDisplay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=100)]
        public int DaysForDayDisplay {
            get {
                return this.daysForDayDisplayField;
            }
            set {
                this.daysForDayDisplayField = value;
                this.RaisePropertyChanged("DaysForDayDisplay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=101)]
        public int DaysForWeekDisplay {
            get {
                return this.daysForWeekDisplayField;
            }
            set {
                this.daysForWeekDisplayField = value;
                this.RaisePropertyChanged("DaysForWeekDisplay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=102)]
        public int DaysForBiWeeklyDisplay {
            get {
                return this.daysForBiWeeklyDisplayField;
            }
            set {
                this.daysForBiWeeklyDisplayField = value;
                this.RaisePropertyChanged("DaysForBiWeeklyDisplay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=103)]
        public int DaysForMonthDisplay {
            get {
                return this.daysForMonthDisplayField;
            }
            set {
                this.daysForMonthDisplayField = value;
                this.RaisePropertyChanged("DaysForMonthDisplay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=104)]
        public int DaysForQuarterDisplay {
            get {
                return this.daysForQuarterDisplayField;
            }
            set {
                this.daysForQuarterDisplayField = value;
                this.RaisePropertyChanged("DaysForQuarterDisplay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=105)]
        public int DaysForSemiAnnualDisplay {
            get {
                return this.daysForSemiAnnualDisplayField;
            }
            set {
                this.daysForSemiAnnualDisplayField = value;
                this.RaisePropertyChanged("DaysForSemiAnnualDisplay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=106)]
        public int DaysForAnnualDisplay {
            get {
                return this.daysForAnnualDisplayField;
            }
            set {
                this.daysForAnnualDisplayField = value;
                this.RaisePropertyChanged("DaysForAnnualDisplay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=107)]
        public int DaysForBiAnnualDisplay {
            get {
                return this.daysForBiAnnualDisplayField;
            }
            set {
                this.daysForBiAnnualDisplayField = value;
                this.RaisePropertyChanged("DaysForBiAnnualDisplay");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=108)]
        public int DaysForPentaAnnualDisplay {
            get {
                return this.daysForPentaAnnualDisplayField;
            }
            set {
                this.daysForPentaAnnualDisplayField = value;
                this.RaisePropertyChanged("DaysForPentaAnnualDisplay");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum LinePattern {
        
        /// <remarks/>
        Solid,
        
        /// <remarks/>
        Dot,
        
        /// <remarks/>
        Dash,
        
        /// <remarks/>
        DashDot,
        
        /// <remarks/>
        DashDotDot,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum ImageFrameType {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Colonial,
        
        /// <remarks/>
        Common,
        
        /// <remarks/>
        Embed,
        
        /// <remarks/>
        Emboss,
        
        /// <remarks/>
        FrameOpenRight,
        
        /// <remarks/>
        FrameOpenRL,
        
        /// <remarks/>
        OneBarGradient,
        
        /// <remarks/>
        RoundedUp,
        
        /// <remarks/>
        SlimRoundedShadowed,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum PredefinedProjection {
        
        /// <remarks/>
        Orthogonal,
        
        /// <remarks/>
        OrthogonalElevated,
        
        /// <remarks/>
        OrthogonalHorizontalLeft,
        
        /// <remarks/>
        OrthogonalHorizontalRight,
        
        /// <remarks/>
        OrthogonalHalf,
        
        /// <remarks/>
        OrthogonalHalfHorizontalLeft,
        
        /// <remarks/>
        OrthogonalHalfHorizontalRight,
        
        /// <remarks/>
        OrthogonalHalfRotated,
        
        /// <remarks/>
        OrthogonalHalfElevated,
        
        /// <remarks/>
        Perspective,
        
        /// <remarks/>
        PerspectiveHorizontalLeft,
        
        /// <remarks/>
        PerspectiveHorizontalRight,
        
        /// <remarks/>
        PerspectiveRotated,
        
        /// <remarks/>
        PerspectiveElevated,
        
        /// <remarks/>
        PerspectiveTilted,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum TickPeriod {
        
        /// <remarks/>
        Tick,
        
        /// <remarks/>
        Millisecond,
        
        /// <remarks/>
        Second,
        
        /// <remarks/>
        Minute,
        
        /// <remarks/>
        Hour,
        
        /// <remarks/>
        Day,
        
        /// <remarks/>
        Week,
        
        /// <remarks/>
        Month,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum HorzAlign {
        
        /// <remarks/>
        Center,
        
        /// <remarks/>
        Left,
        
        /// <remarks/>
        Right,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum PredefinedLightModel {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        SoftTopLeft,
        
        /// <remarks/>
        SoftFrontal,
        
        /// <remarks/>
        SoftTopRight,
        
        /// <remarks/>
        ShinyTopLeft,
        
        /// <remarks/>
        ShinyFrontal,
        
        /// <remarks/>
        ShinyTopRight,
        
        /// <remarks/>
        MetallicLustre,
        
        /// <remarks/>
        NorthernLights,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CurrencyChartIntraday : StockChart {
        
        private string periodTypeField;
        
        private string startTimeField;
        
        private string endTimeField;
        
        private int widthField;
        
        private int heightField;
        
        private string titleField;
        
        private StockChartStyles styleField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PeriodType {
            get {
                return this.periodTypeField;
            }
            set {
                this.periodTypeField = value;
                this.RaisePropertyChanged("PeriodType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
                this.RaisePropertyChanged("StartTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
                this.RaisePropertyChanged("EndTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
                this.RaisePropertyChanged("Width");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
                this.RaisePropertyChanged("Height");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public StockChartStyles Style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
                this.RaisePropertyChanged("Style");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
                this.RaisePropertyChanged("Url");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum StockChartStyles {
        
        /// <remarks/>
        Line,
        
        /// <remarks/>
        Candle,
        
        /// <remarks/>
        Stick,
        
        /// <remarks/>
        Area,
        
        /// <remarks/>
        Percentage,
        
        /// <remarks/>
        LinePercentage,
        
        /// <remarks/>
        CandlePercentage,
        
        /// <remarks/>
        StickPercentage,
        
        /// <remarks/>
        AreaPercentage,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class HistoricalChart : StockChart {
        
        private HistoricalPeriodTypes periodTypeField;
        
        private string startDateField;
        
        private string endDateField;
        
        private int widthField;
        
        private int heightField;
        
        private string titleField;
        
        private StockChartStyles styleField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public HistoricalPeriodTypes PeriodType {
            get {
                return this.periodTypeField;
            }
            set {
                this.periodTypeField = value;
                this.RaisePropertyChanged("PeriodType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
                this.RaisePropertyChanged("EndDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
                this.RaisePropertyChanged("Width");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
                this.RaisePropertyChanged("Height");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
                this.RaisePropertyChanged("Title");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public StockChartStyles Style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
                this.RaisePropertyChanged("Style");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
                this.RaisePropertyChanged("Url");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum HistoricalPeriodTypes {
        
        /// <remarks/>
        Daily,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Change : Common {
        
        private ChangeTypes typeField;
        
        private double rateField;
        
        private double change1Field;
        
        private double percentChangeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ChangeTypes Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
                this.RaisePropertyChanged("Rate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Change", Order=2)]
        public double Change1 {
            get {
                return this.change1Field;
            }
            set {
                this.change1Field = value;
                this.RaisePropertyChanged("Change1");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double PercentChange {
            get {
                return this.percentChangeField;
            }
            set {
                this.percentChangeField = value;
                this.RaisePropertyChanged("PercentChange");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum ChangeTypes {
        
        /// <remarks/>
        OneMonth,
        
        /// <remarks/>
        ThreeMonth,
        
        /// <remarks/>
        SixMonth,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CrossRateChange : Common {
        
        private string symbolField;
        
        private QuoteTypes typeField;
        
        private Currency fromField;
        
        private Currency toField;
        
        private string dateField;
        
        private string timeField;
        
        private double rateField;
        
        private double bidField;
        
        private double askField;
        
        private Change[] changesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public QuoteTypes Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public Currency To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
                this.RaisePropertyChanged("Rate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
                this.RaisePropertyChanged("Bid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public double Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
                this.RaisePropertyChanged("Ask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=9)]
        public Change[] Changes {
            get {
                return this.changesField;
            }
            set {
                this.changesField = value;
                this.RaisePropertyChanged("Changes");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum QuoteTypes {
        
        /// <remarks/>
        RealTime,
        
        /// <remarks/>
        Delayed15Minutes,
        
        /// <remarks/>
        Delayed20Minutes,
        
        /// <remarks/>
        NotAvailable,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class AverageHistoricalCrossRate : Common {
        
        private string symbolField;
        
        private QuoteTypes typeField;
        
        private Currency fromField;
        
        private Currency toField;
        
        private string dateField;
        
        private double firstField;
        
        private double lastField;
        
        private double highField;
        
        private double lowField;
        
        private string textField;
        
        private double bidField;
        
        private double askField;
        
        private double averageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public QuoteTypes Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public Currency To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double First {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
                this.RaisePropertyChanged("First");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
                this.RaisePropertyChanged("Last");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
                this.RaisePropertyChanged("High");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public double Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
                this.RaisePropertyChanged("Low");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public double Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
                this.RaisePropertyChanged("Bid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public double Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
                this.RaisePropertyChanged("Ask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=12)]
        public double Average {
            get {
                return this.averageField;
            }
            set {
                this.averageField = value;
                this.RaisePropertyChanged("Average");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class MultipleHistoricalCrossRates : Common {
        
        private FullHistoricalCrossRate[] historicalCrossRatesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public FullHistoricalCrossRate[] HistoricalCrossRates {
            get {
                return this.historicalCrossRatesField;
            }
            set {
                this.historicalCrossRatesField = value;
                this.RaisePropertyChanged("HistoricalCrossRates");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class FullHistoricalCrossRate : Common {
        
        private string symbolField;
        
        private QuoteTypes typeField;
        
        private Currency fromField;
        
        private Currency toField;
        
        private string dateField;
        
        private double firstField;
        
        private double lastField;
        
        private double highField;
        
        private double lowField;
        
        private string textField;
        
        private double bidField;
        
        private double askField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public QuoteTypes Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public Currency To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double First {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
                this.RaisePropertyChanged("First");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
                this.RaisePropertyChanged("Last");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
                this.RaisePropertyChanged("High");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public double Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
                this.RaisePropertyChanged("Low");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public double Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
                this.RaisePropertyChanged("Bid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public double Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
                this.RaisePropertyChanged("Ask");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class FullHistoricalCrossRates : Common {
        
        private string symbolField;
        
        private Currency fromField;
        
        private Currency toField;
        
        private string startDateField;
        
        private string endDateField;
        
        private FullCrossRateItem[] crossRatesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Currency To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
                this.RaisePropertyChanged("EndDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public FullCrossRateItem[] CrossRates {
            get {
                return this.crossRatesField;
            }
            set {
                this.crossRatesField = value;
                this.RaisePropertyChanged("CrossRates");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class HistoricalCrossRates : Common {
        
        private string symbolField;
        
        private Currency fromField;
        
        private Currency toField;
        
        private string startDateField;
        
        private string endDateField;
        
        private CrossRateItem[] crossRatesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Currency To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
                this.RaisePropertyChanged("StartDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
                this.RaisePropertyChanged("EndDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public CrossRateItem[] CrossRates {
            get {
                return this.crossRatesField;
            }
            set {
                this.crossRatesField = value;
                this.RaisePropertyChanged("CrossRates");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class HistoricalCrossRate : Common {
        
        private string symbolField;
        
        private QuoteTypes typeField;
        
        private Currency fromField;
        
        private Currency toField;
        
        private string dateField;
        
        private double firstField;
        
        private double lastField;
        
        private double highField;
        
        private double lowField;
        
        private string textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public QuoteTypes Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public Currency To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double First {
            get {
                return this.firstField;
            }
            set {
                this.firstField = value;
                this.RaisePropertyChanged("First");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Last {
            get {
                return this.lastField;
            }
            set {
                this.lastField = value;
                this.RaisePropertyChanged("Last");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double High {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
                this.RaisePropertyChanged("High");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public double Low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
                this.RaisePropertyChanged("Low");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class HTMLCrossRateTable : Common {
        
        private string hTMLField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string HTML {
            get {
                return this.hTMLField;
            }
            set {
                this.hTMLField = value;
                this.RaisePropertyChanged("HTML");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class Report : Common {
        
        private string toField;
        
        private Line[] linesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public Line[] Lines {
            get {
                return this.linesField;
            }
            set {
                this.linesField = value;
                this.RaisePropertyChanged("Lines");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CrossRateTableLineWithBidAsk : Common {
        
        private Currency fromField;
        
        private CrossRate[] exchangeRatesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public CrossRate[] ExchangeRates {
            get {
                return this.exchangeRatesField;
            }
            set {
                this.exchangeRatesField = value;
                this.RaisePropertyChanged("ExchangeRates");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CrossRate : Common {
        
        private string symbolField;
        
        private QuoteTypes typeField;
        
        private Currency fromField;
        
        private Currency toField;
        
        private string dateField;
        
        private string timeField;
        
        private double rateField;
        
        private double bidField;
        
        private string bidTimeField;
        
        private double askField;
        
        private string askTimeField;
        
        private string textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public QuoteTypes Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public Currency To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
                this.RaisePropertyChanged("Rate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
                this.RaisePropertyChanged("Bid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string BidTime {
            get {
                return this.bidTimeField;
            }
            set {
                this.bidTimeField = value;
                this.RaisePropertyChanged("BidTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public double Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
                this.RaisePropertyChanged("Ask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public string AskTime {
            get {
                return this.askTimeField;
            }
            set {
                this.askTimeField = value;
                this.RaisePropertyChanged("AskTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CrossRateTableWithBidAsk : Common {
        
        private CrossRateTableLineWithBidAsk[] linesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public CrossRateTableLineWithBidAsk[] Lines {
            get {
                return this.linesField;
            }
            set {
                this.linesField = value;
                this.RaisePropertyChanged("Lines");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ExchangeRate : Common {
        
        private Currency toField;
        
        private string dateField;
        
        private string timeField;
        
        private double rateField;
        
        private string textField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Currency To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
                this.RaisePropertyChanged("Rate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CrossRateTableLine : Common {
        
        private Currency fromField;
        
        private ExchangeRate[] exchangeRatesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public ExchangeRate[] ExchangeRates {
            get {
                return this.exchangeRatesField;
            }
            set {
                this.exchangeRatesField = value;
                this.RaisePropertyChanged("ExchangeRates");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CrossRateTable : Common {
        
        private CrossRateTableLine[] linesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public CrossRateTableLine[] Lines {
            get {
                return this.linesField;
            }
            set {
                this.linesField = value;
                this.RaisePropertyChanged("Lines");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ForwardRate : Common {
        
        private string symbolField;
        
        private Currency fromField;
        
        private Currency toField;
        
        private string dateField;
        
        private string timeField;
        
        private double bidField;
        
        private string bidTimeField;
        
        private double askField;
        
        private string askTimeField;
        
        private int factorField;
        
        private Forward[] forwardsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
                this.RaisePropertyChanged("Symbol");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Currency To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double Bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
                this.RaisePropertyChanged("Bid");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string BidTime {
            get {
                return this.bidTimeField;
            }
            set {
                this.bidTimeField = value;
                this.RaisePropertyChanged("BidTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double Ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
                this.RaisePropertyChanged("Ask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string AskTime {
            get {
                return this.askTimeField;
            }
            set {
                this.askTimeField = value;
                this.RaisePropertyChanged("AskTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public int Factor {
            get {
                return this.factorField;
            }
            set {
                this.factorField = value;
                this.RaisePropertyChanged("Factor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=10)]
        public Forward[] Forwards {
            get {
                return this.forwardsField;
            }
            set {
                this.forwardsField = value;
                this.RaisePropertyChanged("Forwards");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class ExchangeConversion : Common {
        
        private Currency fromField;
        
        private Currency toField;
        
        private string dateField;
        
        private string timeField;
        
        private double amountField;
        
        private double exchangeRateField;
        
        private double resultField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Currency From {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
                this.RaisePropertyChanged("From");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Currency To {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
                this.RaisePropertyChanged("To");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
                this.RaisePropertyChanged("Time");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double Amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
                this.RaisePropertyChanged("Amount");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public double ExchangeRate {
            get {
                return this.exchangeRateField;
            }
            set {
                this.exchangeRateField = value;
                this.RaisePropertyChanged("ExchangeRate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class UnitOfAccount : Common {
        
        private string currencyField;
        
        private string dateField;
        
        private double rateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Currency {
            get {
                return this.currencyField;
            }
            set {
                this.currencyField = value;
                this.RaisePropertyChanged("Currency");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Date {
            get {
                return this.dateField;
            }
            set {
                this.dateField = value;
                this.RaisePropertyChanged("Date");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double Rate {
            get {
                return this.rateField;
            }
            set {
                this.rateField = value;
                this.RaisePropertyChanged("Rate");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class OfficialRates : Common {
        
        private OfficialCountry[] countryListField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public OfficialCountry[] CountryList {
            get {
                return this.countryListField;
            }
            set {
                this.countryListField = value;
                this.RaisePropertyChanged("CountryList");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public partial class CurrencyList : Common {
        
        private CurrencyItem[] currenciesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public CurrencyItem[] Currencies {
            get {
                return this.currenciesField;
            }
            set {
                this.currenciesField = value;
                this.RaisePropertyChanged("Currencies");
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListCurrencies", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class ListCurrenciesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        public ListCurrenciesRequest() {
        }
        
        public ListCurrenciesRequest(currencyClient.wsr.Header Header) {
            this.Header = Header;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListCurrenciesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class ListCurrenciesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CurrencyList ListCurrenciesResult;
        
        public ListCurrenciesResponse() {
        }
        
        public ListCurrenciesResponse(currencyClient.wsr.CurrencyList ListCurrenciesResult) {
            this.ListCurrenciesResult = ListCurrenciesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListActiveCurrencies", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class ListActiveCurrenciesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        public ListActiveCurrenciesRequest() {
        }
        
        public ListActiveCurrenciesRequest(currencyClient.wsr.Header Header) {
            this.Header = Header;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListActiveCurrenciesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class ListActiveCurrenciesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CurrencyList ListActiveCurrenciesResult;
        
        public ListActiveCurrenciesResponse() {
        }
        
        public ListActiveCurrenciesResponse(currencyClient.wsr.CurrencyList ListActiveCurrenciesResult) {
            this.ListActiveCurrenciesResult = ListActiveCurrenciesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListOfficialRates", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class ListOfficialRatesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        public ListOfficialRatesRequest() {
        }
        
        public ListOfficialRatesRequest(currencyClient.wsr.Header Header) {
            this.Header = Header;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ListOfficialRatesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class ListOfficialRatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.OfficialRates ListOfficialRatesResult;
        
        public ListOfficialRatesResponse() {
        }
        
        public ListOfficialRatesResponse(currencyClient.wsr.OfficialRates ListOfficialRatesResult) {
            this.ListOfficialRatesResult = ListOfficialRatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUnitOfAccount", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetUnitOfAccountRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Currency;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string AsOfDate;
        
        public GetUnitOfAccountRequest() {
        }
        
        public GetUnitOfAccountRequest(currencyClient.wsr.Header Header, string Currency, string AsOfDate) {
            this.Header = Header;
            this.Currency = Currency;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUnitOfAccountResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetUnitOfAccountResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.UnitOfAccount GetUnitOfAccountResult;
        
        public GetUnitOfAccountResponse() {
        }
        
        public GetUnitOfAccountResponse(currencyClient.wsr.UnitOfAccount GetUnitOfAccountResult) {
            this.GetUnitOfAccountResult = GetUnitOfAccountResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertRealTimeValue", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class ConvertRealTimeValueRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string To;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public double Amount;
        
        public ConvertRealTimeValueRequest() {
        }
        
        public ConvertRealTimeValueRequest(currencyClient.wsr.Header Header, string From, string To, double Amount) {
            this.Header = Header;
            this.From = From;
            this.To = To;
            this.Amount = Amount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertRealTimeValueResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class ConvertRealTimeValueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.ExchangeConversion ConvertRealTimeValueResult;
        
        public ConvertRealTimeValueResponse() {
        }
        
        public ConvertRealTimeValueResponse(currencyClient.wsr.ExchangeConversion ConvertRealTimeValueResult) {
            this.ConvertRealTimeValueResult = ConvertRealTimeValueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertHistoricalValue", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class ConvertHistoricalValueRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string To;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string AsOfDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public double Amount;
        
        public ConvertHistoricalValueRequest() {
        }
        
        public ConvertHistoricalValueRequest(currencyClient.wsr.Header Header, string From, string To, string AsOfDate, double Amount) {
            this.Header = Header;
            this.From = From;
            this.To = To;
            this.AsOfDate = AsOfDate;
            this.Amount = Amount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertHistoricalValueResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class ConvertHistoricalValueResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.ExchangeConversion ConvertHistoricalValueResult;
        
        public ConvertHistoricalValueResponse() {
        }
        
        public ConvertHistoricalValueResponse(currencyClient.wsr.ExchangeConversion ConvertHistoricalValueResult) {
            this.ConvertHistoricalValueResult = ConvertHistoricalValueResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeForwardRate", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeForwardRateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string To;
        
        public GetRealTimeForwardRateRequest() {
        }
        
        public GetRealTimeForwardRateRequest(currencyClient.wsr.Header Header, string From, string To) {
            this.Header = Header;
            this.From = From;
            this.To = To;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeForwardRateResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeForwardRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.ForwardRate GetRealTimeForwardRateResult;
        
        public GetRealTimeForwardRateResponse() {
        }
        
        public GetRealTimeForwardRateResponse(currencyClient.wsr.ForwardRate GetRealTimeForwardRateResult) {
            this.GetRealTimeForwardRateResult = GetRealTimeForwardRateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateAsString", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateAsStringRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string To;
        
        public GetRealTimeCrossRateAsStringRequest() {
        }
        
        public GetRealTimeCrossRateAsStringRequest(currencyClient.wsr.Header Header, string From, string To) {
            this.Header = Header;
            this.From = From;
            this.To = To;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateAsStringResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateAsStringResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRate GetRealTimeCrossRateAsStringResult;
        
        public GetRealTimeCrossRateAsStringResponse() {
        }
        
        public GetRealTimeCrossRateAsStringResponse(currencyClient.wsr.CrossRate GetRealTimeCrossRateAsStringResult) {
            this.GetRealTimeCrossRateAsStringResult = GetRealTimeCrossRateAsStringResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLatestCrossRate", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetLatestCrossRateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string To;
        
        public GetLatestCrossRateRequest() {
        }
        
        public GetLatestCrossRateRequest(currencyClient.wsr.Header Header, string From, string To) {
            this.Header = Header;
            this.From = From;
            this.To = To;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLatestCrossRateResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetLatestCrossRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRate GetLatestCrossRateResult;
        
        public GetLatestCrossRateResponse() {
        }
        
        public GetLatestCrossRateResponse(currencyClient.wsr.CrossRate GetLatestCrossRateResult) {
            this.GetLatestCrossRateResult = GetLatestCrossRateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLatestCrossRates", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetLatestCrossRatesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string Tos;
        
        public GetLatestCrossRatesRequest() {
        }
        
        public GetLatestCrossRatesRequest(currencyClient.wsr.Header Header, string From, string Tos) {
            this.Header = Header;
            this.From = From;
            this.Tos = Tos;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLatestCrossRatesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetLatestCrossRatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRate[] GetLatestCrossRatesResult;
        
        public GetLatestCrossRatesResponse() {
        }
        
        public GetLatestCrossRatesResponse(currencyClient.wsr.CrossRate[] GetLatestCrossRatesResult) {
            this.GetLatestCrossRatesResult = GetLatestCrossRatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRate", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.Currencies From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public currencyClient.wsr.Currencies To;
        
        public GetRealTimeCrossRateRequest() {
        }
        
        public GetRealTimeCrossRateRequest(currencyClient.wsr.Header Header, currencyClient.wsr.Currencies From, currencyClient.wsr.Currencies To) {
            this.Header = Header;
            this.From = From;
            this.To = To;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRate GetRealTimeCrossRateResult;
        
        public GetRealTimeCrossRateResponse() {
        }
        
        public GetRealTimeCrossRateResponse(currencyClient.wsr.CrossRate GetRealTimeCrossRateResult) {
            this.GetRealTimeCrossRateResult = GetRealTimeCrossRateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateGMT", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateGMTRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.Currencies From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public currencyClient.wsr.Currencies To;
        
        public GetRealTimeCrossRateGMTRequest() {
        }
        
        public GetRealTimeCrossRateGMTRequest(currencyClient.wsr.Header Header, currencyClient.wsr.Currencies From, currencyClient.wsr.Currencies To) {
            this.Header = Header;
            this.From = From;
            this.To = To;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateGMTResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateGMTResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRate GetRealTimeCrossRateGMTResult;
        
        public GetRealTimeCrossRateGMTResponse() {
        }
        
        public GetRealTimeCrossRateGMTResponse(currencyClient.wsr.CrossRate GetRealTimeCrossRateGMTResult) {
            this.GetRealTimeCrossRateGMTResult = GetRealTimeCrossRateGMTResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRawCrossRate", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRawCrossRateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.Currencies From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public currencyClient.wsr.Currencies To;
        
        public GetRawCrossRateRequest() {
        }
        
        public GetRawCrossRateRequest(currencyClient.wsr.Header Header, currencyClient.wsr.Currencies From, currencyClient.wsr.Currencies To) {
            this.Header = Header;
            this.From = From;
            this.To = To;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRawCrossRateResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRawCrossRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRate GetRawCrossRateResult;
        
        public GetRawCrossRateResponse() {
        }
        
        public GetRawCrossRateResponse(currencyClient.wsr.CrossRate GetRawCrossRateResult) {
            this.GetRawCrossRateResult = GetRawCrossRateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRawCrossRates", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRawCrossRatesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        public GetRawCrossRatesRequest() {
        }
        
        public GetRawCrossRatesRequest(currencyClient.wsr.Header Header, string Symbols) {
            this.Header = Header;
            this.Symbols = Symbols;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRawCrossRatesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRawCrossRatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRate[] GetRawCrossRatesResult;
        
        public GetRawCrossRatesResponse() {
        }
        
        public GetRawCrossRatesResponse(currencyClient.wsr.CrossRate[] GetRawCrossRatesResult) {
            this.GetRawCrossRatesResult = GetRawCrossRatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRates", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRatesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        public GetRealTimeCrossRatesRequest() {
        }
        
        public GetRealTimeCrossRatesRequest(currencyClient.wsr.Header Header, string Symbols) {
            this.Header = Header;
            this.Symbols = Symbols;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRatesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRate[] GetRealTimeCrossRatesResult;
        
        public GetRealTimeCrossRatesResponse() {
        }
        
        public GetRealTimeCrossRatesResponse(currencyClient.wsr.CrossRate[] GetRealTimeCrossRatesResult) {
            this.GetRealTimeCrossRatesResult = GetRealTimeCrossRatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateTables", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateTablesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndDate;
        
        public GetHistoricalCrossRateTablesRequest() {
        }
        
        public GetHistoricalCrossRateTablesRequest(currencyClient.wsr.Header Header, string Symbols, string StartDate, string EndDate) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateTablesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateTablesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRateTable[] GetHistoricalCrossRateTablesResult;
        
        public GetHistoricalCrossRateTablesResponse() {
        }
        
        public GetHistoricalCrossRateTablesResponse(currencyClient.wsr.CrossRateTable[] GetHistoricalCrossRateTablesResult) {
            this.GetHistoricalCrossRateTablesResult = GetHistoricalCrossRateTablesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateTablesBidAsk", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateTablesBidAskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndDate;
        
        public GetHistoricalCrossRateTablesBidAskRequest() {
        }
        
        public GetHistoricalCrossRateTablesBidAskRequest(currencyClient.wsr.Header Header, string Symbols, string StartDate, string EndDate) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateTablesBidAskResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateTablesBidAskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRateTableWithBidAsk[] GetHistoricalCrossRateTablesBidAskResult;
        
        public GetHistoricalCrossRateTablesBidAskResponse() {
        }
        
        public GetHistoricalCrossRateTablesBidAskResponse(currencyClient.wsr.CrossRateTableWithBidAsk[] GetHistoricalCrossRateTablesBidAskResult) {
            this.GetHistoricalCrossRateTablesBidAskResult = GetHistoricalCrossRateTablesBidAskResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyReport", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyReportRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string From;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string To;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string EndDate;
        
        public GetCurrencyReportRequest() {
        }
        
        public GetCurrencyReportRequest(currencyClient.wsr.Header Header, string From, string To, string StartDate, string EndDate) {
            this.Header = Header;
            this.From = From;
            this.To = To;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyReportResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyReportResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.Report GetCurrencyReportResult;
        
        public GetCurrencyReportResponse() {
        }
        
        public GetCurrencyReportResponse(currencyClient.wsr.Report GetCurrencyReportResult) {
            this.GetCurrencyReportResult = GetCurrencyReportResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateTable", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateTableRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string AsOfDate;
        
        public GetHistoricalCrossRateTableRequest() {
        }
        
        public GetHistoricalCrossRateTableRequest(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateTableResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRateTable GetHistoricalCrossRateTableResult;
        
        public GetHistoricalCrossRateTableResponse() {
        }
        
        public GetHistoricalCrossRateTableResponse(currencyClient.wsr.CrossRateTable GetHistoricalCrossRateTableResult) {
            this.GetHistoricalCrossRateTableResult = GetHistoricalCrossRateTableResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateTableBidAsk", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateTableBidAskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string AsOfDate;
        
        public GetHistoricalCrossRateTableBidAskRequest() {
        }
        
        public GetHistoricalCrossRateTableBidAskRequest(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateTableBidAskResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateTableBidAskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRateTableWithBidAsk GetHistoricalCrossRateTableBidAskResult;
        
        public GetHistoricalCrossRateTableBidAskResponse() {
        }
        
        public GetHistoricalCrossRateTableBidAskResponse(currencyClient.wsr.CrossRateTableWithBidAsk GetHistoricalCrossRateTableBidAskResult) {
            this.GetHistoricalCrossRateTableBidAskResult = GetHistoricalCrossRateTableBidAskResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateTable", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateTableRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        public GetRealTimeCrossRateTableRequest() {
        }
        
        public GetRealTimeCrossRateTableRequest(currencyClient.wsr.Header Header, string Symbols) {
            this.Header = Header;
            this.Symbols = Symbols;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateTableResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateTableResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRateTable GetRealTimeCrossRateTableResult;
        
        public GetRealTimeCrossRateTableResponse() {
        }
        
        public GetRealTimeCrossRateTableResponse(currencyClient.wsr.CrossRateTable GetRealTimeCrossRateTableResult) {
            this.GetRealTimeCrossRateTableResult = GetRealTimeCrossRateTableResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateTableWithBidAsk", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateTableWithBidAskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        public GetRealTimeCrossRateTableWithBidAskRequest() {
        }
        
        public GetRealTimeCrossRateTableWithBidAskRequest(currencyClient.wsr.Header Header, string Symbols) {
            this.Header = Header;
            this.Symbols = Symbols;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateTableWithBidAskResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateTableWithBidAskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRateTableWithBidAsk GetRealTimeCrossRateTableWithBidAskResult;
        
        public GetRealTimeCrossRateTableWithBidAskResponse() {
        }
        
        public GetRealTimeCrossRateTableWithBidAskResponse(currencyClient.wsr.CrossRateTableWithBidAsk GetRealTimeCrossRateTableWithBidAskResult) {
            this.GetRealTimeCrossRateTableWithBidAskResult = GetRealTimeCrossRateTableWithBidAskResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllCrossRatesForACurrency", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetAllCrossRatesForACurrencyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        public GetAllCrossRatesForACurrencyRequest() {
        }
        
        public GetAllCrossRatesForACurrencyRequest(currencyClient.wsr.Header Header, string Symbol) {
            this.Header = Header;
            this.Symbol = Symbol;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAllCrossRatesForACurrencyResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetAllCrossRatesForACurrencyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRateTableLineWithBidAsk GetAllCrossRatesForACurrencyResult;
        
        public GetAllCrossRatesForACurrencyResponse() {
        }
        
        public GetAllCrossRatesForACurrencyResponse(currencyClient.wsr.CrossRateTableLineWithBidAsk GetAllCrossRatesForACurrencyResult) {
            this.GetAllCrossRatesForACurrencyResult = GetAllCrossRatesForACurrencyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateTableAsHTML", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateTableAsHTMLRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string ColumnHeaderStyle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string LineHeaderStyle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string CellStyle;
        
        public GetRealTimeCrossRateTableAsHTMLRequest() {
        }
        
        public GetRealTimeCrossRateTableAsHTMLRequest(currencyClient.wsr.Header Header, string Symbols, string ColumnHeaderStyle, string LineHeaderStyle, string CellStyle) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.ColumnHeaderStyle = ColumnHeaderStyle;
            this.LineHeaderStyle = LineHeaderStyle;
            this.CellStyle = CellStyle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetRealTimeCrossRateTableAsHTMLResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetRealTimeCrossRateTableAsHTMLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HTMLCrossRateTable GetRealTimeCrossRateTableAsHTMLResult;
        
        public GetRealTimeCrossRateTableAsHTMLResponse() {
        }
        
        public GetRealTimeCrossRateTableAsHTMLResponse(currencyClient.wsr.HTMLCrossRateTable GetRealTimeCrossRateTableAsHTMLResult) {
            this.GetRealTimeCrossRateTableAsHTMLResult = GetRealTimeCrossRateTableAsHTMLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSimpleRealTimeCrossRateTableAsHTML", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetSimpleRealTimeCrossRateTableAsHTMLRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string ColumnHeaderStyle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string LineHeaderStyle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string CellStyle;
        
        public GetSimpleRealTimeCrossRateTableAsHTMLRequest() {
        }
        
        public GetSimpleRealTimeCrossRateTableAsHTMLRequest(currencyClient.wsr.Header Header, string Symbols, string ColumnHeaderStyle, string LineHeaderStyle, string CellStyle) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.ColumnHeaderStyle = ColumnHeaderStyle;
            this.LineHeaderStyle = LineHeaderStyle;
            this.CellStyle = CellStyle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetSimpleRealTimeCrossRateTableAsHTMLResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetSimpleRealTimeCrossRateTableAsHTMLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HTMLCrossRateTable GetSimpleRealTimeCrossRateTableAsHTMLResult;
        
        public GetSimpleRealTimeCrossRateTableAsHTMLResponse() {
        }
        
        public GetSimpleRealTimeCrossRateTableAsHTMLResponse(currencyClient.wsr.HTMLCrossRateTable GetSimpleRealTimeCrossRateTableAsHTMLResult) {
            this.GetSimpleRealTimeCrossRateTableAsHTMLResult = GetSimpleRealTimeCrossRateTableAsHTMLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateTableAsHTML", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateTableAsHTMLRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string AsOfDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string ColumnHeaderStyle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string LineHeaderStyle;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=4)]
        public string CellStyle;
        
        public GetHistoricalCrossRateTableAsHTMLRequest() {
        }
        
        public GetHistoricalCrossRateTableAsHTMLRequest(currencyClient.wsr.Header Header, string Symbols, string AsOfDate, string ColumnHeaderStyle, string LineHeaderStyle, string CellStyle) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.AsOfDate = AsOfDate;
            this.ColumnHeaderStyle = ColumnHeaderStyle;
            this.LineHeaderStyle = LineHeaderStyle;
            this.CellStyle = CellStyle;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateTableAsHTMLResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateTableAsHTMLResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HTMLCrossRateTable GetHistoricalCrossRateTableAsHTMLResult;
        
        public GetHistoricalCrossRateTableAsHTMLResponse() {
        }
        
        public GetHistoricalCrossRateTableAsHTMLResponse(currencyClient.wsr.HTMLCrossRateTable GetHistoricalCrossRateTableAsHTMLResult) {
            this.GetHistoricalCrossRateTableAsHTMLResult = GetHistoricalCrossRateTableAsHTMLResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRate", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string AsOfDate;
        
        public GetHistoricalCrossRateRequest() {
        }
        
        public GetHistoricalCrossRateRequest(currencyClient.wsr.Header Header, string Symbol, string AsOfDate) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HistoricalCrossRate GetHistoricalCrossRateResult;
        
        public GetHistoricalCrossRateResponse() {
        }
        
        public GetHistoricalCrossRateResponse(currencyClient.wsr.HistoricalCrossRate GetHistoricalCrossRateResult) {
            this.GetHistoricalCrossRateResult = GetHistoricalCrossRateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRates", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string AsOfDate;
        
        public GetHistoricalCrossRatesRequest() {
        }
        
        public GetHistoricalCrossRatesRequest(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HistoricalCrossRate[] GetHistoricalCrossRatesResult;
        
        public GetHistoricalCrossRatesResponse() {
        }
        
        public GetHistoricalCrossRatesResponse(currencyClient.wsr.HistoricalCrossRate[] GetHistoricalCrossRatesResult) {
            this.GetHistoricalCrossRatesResult = GetHistoricalCrossRatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateBidAsk", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateBidAskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string AsOfDate;
        
        public GetHistoricalCrossRateBidAskRequest() {
        }
        
        public GetHistoricalCrossRateBidAskRequest(currencyClient.wsr.Header Header, string Symbol, string AsOfDate) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRateBidAskResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRateBidAskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.FullHistoricalCrossRate GetHistoricalCrossRateBidAskResult;
        
        public GetHistoricalCrossRateBidAskResponse() {
        }
        
        public GetHistoricalCrossRateBidAskResponse(currencyClient.wsr.FullHistoricalCrossRate GetHistoricalCrossRateBidAskResult) {
            this.GetHistoricalCrossRateBidAskResult = GetHistoricalCrossRateBidAskResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesBidAsk", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesBidAskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string AsOfDate;
        
        public GetHistoricalCrossRatesBidAskRequest() {
        }
        
        public GetHistoricalCrossRatesBidAskRequest(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesBidAskResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesBidAskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.FullHistoricalCrossRate[] GetHistoricalCrossRatesBidAskResult;
        
        public GetHistoricalCrossRatesBidAskResponse() {
        }
        
        public GetHistoricalCrossRatesBidAskResponse(currencyClient.wsr.FullHistoricalCrossRate[] GetHistoricalCrossRatesBidAskResult) {
            this.GetHistoricalCrossRatesBidAskResult = GetHistoricalCrossRatesBidAskResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesRange", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesRangeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndDate;
        
        public GetHistoricalCrossRatesRangeRequest() {
        }
        
        public GetHistoricalCrossRatesRangeRequest(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesRangeResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesRangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HistoricalCrossRates GetHistoricalCrossRatesRangeResult;
        
        public GetHistoricalCrossRatesRangeResponse() {
        }
        
        public GetHistoricalCrossRatesRangeResponse(currencyClient.wsr.HistoricalCrossRates GetHistoricalCrossRatesRangeResult) {
            this.GetHistoricalCrossRatesRangeResult = GetHistoricalCrossRatesRangeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesBidAskRange", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesBidAskRangeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndDate;
        
        public GetHistoricalCrossRatesBidAskRangeRequest() {
        }
        
        public GetHistoricalCrossRatesBidAskRangeRequest(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesBidAskRangeResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesBidAskRangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.FullHistoricalCrossRates GetHistoricalCrossRatesBidAskRangeResult;
        
        public GetHistoricalCrossRatesBidAskRangeResponse() {
        }
        
        public GetHistoricalCrossRatesBidAskRangeResponse(currencyClient.wsr.FullHistoricalCrossRates GetHistoricalCrossRatesBidAskRangeResult) {
            this.GetHistoricalCrossRatesBidAskRangeResult = GetHistoricalCrossRatesBidAskRangeResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum PeriodTypes {
        
        /// <remarks/>
        Day,
        
        /// <remarks/>
        Week,
        
        /// <remarks/>
        Month,
        
        /// <remarks/>
        Quarter,
        
        /// <remarks/>
        Year,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesAsOf", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesAsOfRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public System.DateTime EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public currencyClient.wsr.PeriodTypes PeriodType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public int Periods;
        
        public GetHistoricalCrossRatesAsOfRequest() {
        }
        
        public GetHistoricalCrossRatesAsOfRequest(currencyClient.wsr.Header Header, string Symbol, System.DateTime EndDate, currencyClient.wsr.PeriodTypes PeriodType, int Periods) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.EndDate = EndDate;
            this.PeriodType = PeriodType;
            this.Periods = Periods;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesAsOfResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesAsOfResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HistoricalCrossRates GetHistoricalCrossRatesAsOfResult;
        
        public GetHistoricalCrossRatesAsOfResponse() {
        }
        
        public GetHistoricalCrossRatesAsOfResponse(currencyClient.wsr.HistoricalCrossRates GetHistoricalCrossRatesAsOfResult) {
            this.GetHistoricalCrossRatesAsOfResult = GetHistoricalCrossRatesAsOfResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesBidAskAsOf", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesBidAskAsOfRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public System.DateTime EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public currencyClient.wsr.PeriodTypes PeriodType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public int Periods;
        
        public GetHistoricalCrossRatesBidAskAsOfRequest() {
        }
        
        public GetHistoricalCrossRatesBidAskAsOfRequest(currencyClient.wsr.Header Header, string Symbol, System.DateTime EndDate, currencyClient.wsr.PeriodTypes PeriodType, int Periods) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.EndDate = EndDate;
            this.PeriodType = PeriodType;
            this.Periods = Periods;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalCrossRatesBidAskAsOfResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalCrossRatesBidAskAsOfResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.FullHistoricalCrossRates GetHistoricalCrossRatesBidAskAsOfResult;
        
        public GetHistoricalCrossRatesBidAskAsOfResponse() {
        }
        
        public GetHistoricalCrossRatesBidAskAsOfResponse(currencyClient.wsr.FullHistoricalCrossRates GetHistoricalCrossRatesBidAskAsOfResult) {
            this.GetHistoricalCrossRatesBidAskAsOfResult = GetHistoricalCrossRatesBidAskAsOfResult;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.xignite.com/services/")]
    public enum CountryTypes {
        
        /// <remarks/>
        Mexico,
        
        /// <remarks/>
        UnitedStatesAM,
        
        /// <remarks/>
        UnitedStatesPM,
        
        /// <remarks/>
        Canada,
        
        /// <remarks/>
        Europe,
        
        /// <remarks/>
        Russia,
        
        /// <remarks/>
        Poland,
        
        /// <remarks/>
        Romania,
        
        /// <remarks/>
        Hungary,
        
        /// <remarks/>
        Chile,
        
        /// <remarks/>
        Czech,
        
        /// <remarks/>
        Australia,
        
        /// <remarks/>
        Brazil,
        
        /// <remarks/>
        Bulgaria,
        
        /// <remarks/>
        China,
        
        /// <remarks/>
        Uruguay,
        
        /// <remarks/>
        UnitedStates,
        
        /// <remarks/>
        Colombia,
        
        /// <remarks/>
        Argentina,
        
        /// <remarks/>
        MexicoDoF,
        
        /// <remarks/>
        Serbia,
        
        /// <remarks/>
        Macedonia,
        
        /// <remarks/>
        Turkey,
        
        /// <remarks/>
        India,
        
        /// <remarks/>
        Philippines,
        
        /// <remarks/>
        EuropeItalyEUR,
        
        /// <remarks/>
        Thailand,
        
        /// <remarks/>
        EuropeItalyUSD,
        
        /// <remarks/>
        UnitedArabEmirates,
        
        /// <remarks/>
        Kazakhstan,
        
        /// <remarks/>
        Peru,
        
        /// <remarks/>
        Oman,
        
        /// <remarks/>
        DominicanRepublic,
        
        /// <remarks/>
        Croatia,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOfficialCrossRate", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetOfficialCrossRateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CountryTypes CountryType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public currencyClient.wsr.Currencies Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string AsOfDate;
        
        public GetOfficialCrossRateRequest() {
        }
        
        public GetOfficialCrossRateRequest(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, currencyClient.wsr.Currencies Symbol, string AsOfDate) {
            this.Header = Header;
            this.CountryType = CountryType;
            this.Symbol = Symbol;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOfficialCrossRateResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetOfficialCrossRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HistoricalCrossRate GetOfficialCrossRateResult;
        
        public GetOfficialCrossRateResponse() {
        }
        
        public GetOfficialCrossRateResponse(currencyClient.wsr.HistoricalCrossRate GetOfficialCrossRateResult) {
            this.GetOfficialCrossRateResult = GetOfficialCrossRateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOfficialCrossRates", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetOfficialCrossRatesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CountryTypes CountryType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string AsOfDate;
        
        public GetOfficialCrossRatesRequest() {
        }
        
        public GetOfficialCrossRatesRequest(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, string Symbols, string AsOfDate) {
            this.Header = Header;
            this.CountryType = CountryType;
            this.Symbols = Symbols;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOfficialCrossRatesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetOfficialCrossRatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HistoricalCrossRate[] GetOfficialCrossRatesResult;
        
        public GetOfficialCrossRatesResponse() {
        }
        
        public GetOfficialCrossRatesResponse(currencyClient.wsr.HistoricalCrossRate[] GetOfficialCrossRatesResult) {
            this.GetOfficialCrossRatesResult = GetOfficialCrossRatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOfficialCrossRateBidAsk", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetOfficialCrossRateBidAskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CountryTypes CountryType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public currencyClient.wsr.Currencies Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string AsOfDate;
        
        public GetOfficialCrossRateBidAskRequest() {
        }
        
        public GetOfficialCrossRateBidAskRequest(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, currencyClient.wsr.Currencies Symbol, string AsOfDate) {
            this.Header = Header;
            this.CountryType = CountryType;
            this.Symbol = Symbol;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOfficialCrossRateBidAskResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetOfficialCrossRateBidAskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.FullHistoricalCrossRate GetOfficialCrossRateBidAskResult;
        
        public GetOfficialCrossRateBidAskResponse() {
        }
        
        public GetOfficialCrossRateBidAskResponse(currencyClient.wsr.FullHistoricalCrossRate GetOfficialCrossRateBidAskResult) {
            this.GetOfficialCrossRateBidAskResult = GetOfficialCrossRateBidAskResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOfficialCrossRatesBidAsk", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetOfficialCrossRatesBidAskRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CountryTypes CountryType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string AsOfDate;
        
        public GetOfficialCrossRatesBidAskRequest() {
        }
        
        public GetOfficialCrossRatesBidAskRequest(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, string Symbols, string AsOfDate) {
            this.Header = Header;
            this.CountryType = CountryType;
            this.Symbols = Symbols;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetOfficialCrossRatesBidAskResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetOfficialCrossRatesBidAskResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.FullHistoricalCrossRate[] GetOfficialCrossRatesBidAskResult;
        
        public GetOfficialCrossRatesBidAskResponse() {
        }
        
        public GetOfficialCrossRatesBidAskResponse(currencyClient.wsr.FullHistoricalCrossRate[] GetOfficialCrossRatesBidAskResult) {
            this.GetOfficialCrossRatesBidAskResult = GetOfficialCrossRatesBidAskResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMutipleHistoricalCrossRates", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetMutipleHistoricalCrossRatesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string AsOfDate;
        
        public GetMutipleHistoricalCrossRatesRequest() {
        }
        
        public GetMutipleHistoricalCrossRatesRequest(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.AsOfDate = AsOfDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMutipleHistoricalCrossRatesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetMutipleHistoricalCrossRatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.MultipleHistoricalCrossRates GetMutipleHistoricalCrossRatesResult;
        
        public GetMutipleHistoricalCrossRatesResponse() {
        }
        
        public GetMutipleHistoricalCrossRatesResponse(currencyClient.wsr.MultipleHistoricalCrossRates GetMutipleHistoricalCrossRatesResult) {
            this.GetMutipleHistoricalCrossRatesResult = GetMutipleHistoricalCrossRatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAverageHistoricalCrossRates", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetAverageHistoricalCrossRatesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbols;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndDate;
        
        public GetAverageHistoricalCrossRatesRequest() {
        }
        
        public GetAverageHistoricalCrossRatesRequest(currencyClient.wsr.Header Header, string Symbols, string StartDate, string EndDate) {
            this.Header = Header;
            this.Symbols = Symbols;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAverageHistoricalCrossRatesResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetAverageHistoricalCrossRatesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.AverageHistoricalCrossRate[] GetAverageHistoricalCrossRatesResult;
        
        public GetAverageHistoricalCrossRatesResponse() {
        }
        
        public GetAverageHistoricalCrossRatesResponse(currencyClient.wsr.AverageHistoricalCrossRate[] GetAverageHistoricalCrossRatesResult) {
            this.GetAverageHistoricalCrossRatesResult = GetAverageHistoricalCrossRatesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAverageHistoricalCrossRate", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetAverageHistoricalCrossRateRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndDate;
        
        public GetAverageHistoricalCrossRateRequest() {
        }
        
        public GetAverageHistoricalCrossRateRequest(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAverageHistoricalCrossRateResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetAverageHistoricalCrossRateResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.AverageHistoricalCrossRate GetAverageHistoricalCrossRateResult;
        
        public GetAverageHistoricalCrossRateResponse() {
        }
        
        public GetAverageHistoricalCrossRateResponse(currencyClient.wsr.AverageHistoricalCrossRate GetAverageHistoricalCrossRateResult) {
            this.GetAverageHistoricalCrossRateResult = GetAverageHistoricalCrossRateResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalMonthlyCrossRatesRange", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalMonthlyCrossRatesRangeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndDate;
        
        public GetHistoricalMonthlyCrossRatesRangeRequest() {
        }
        
        public GetHistoricalMonthlyCrossRatesRangeRequest(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalMonthlyCrossRatesRangeResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalMonthlyCrossRatesRangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.FullHistoricalCrossRates GetHistoricalMonthlyCrossRatesRangeResult;
        
        public GetHistoricalMonthlyCrossRatesRangeResponse() {
        }
        
        public GetHistoricalMonthlyCrossRatesRangeResponse(currencyClient.wsr.FullHistoricalCrossRates GetHistoricalMonthlyCrossRatesRangeResult) {
            this.GetHistoricalMonthlyCrossRatesRangeResult = GetHistoricalMonthlyCrossRatesRangeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCrossRateChange", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCrossRateChangeRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        public GetCrossRateChangeRequest() {
        }
        
        public GetCrossRateChangeRequest(currencyClient.wsr.Header Header, string Symbol) {
            this.Header = Header;
            this.Symbol = Symbol;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCrossRateChangeResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCrossRateChangeResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CrossRateChange GetCrossRateChangeResult;
        
        public GetCrossRateChangeResponse() {
        }
        
        public GetCrossRateChangeResponse(currencyClient.wsr.CrossRateChange GetCrossRateChangeResult) {
            this.GetCrossRateChangeResult = GetCrossRateChangeResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyChartCustom", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyChartCustomRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public currencyClient.wsr.HistoricalPeriodTypes PeriodType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=4)]
        public currencyClient.wsr.StockChartStyles Style;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=5)]
        public int Width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=6)]
        public int Height;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=7)]
        public currencyClient.wsr.ChartDesign Design;
        
        public GetCurrencyChartCustomRequest() {
        }
        
        public GetCurrencyChartCustomRequest(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, currencyClient.wsr.ChartDesign Design) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.PeriodType = PeriodType;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.Style = Style;
            this.Width = Width;
            this.Height = Height;
            this.Design = Design;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyChartCustomResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyChartCustomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HistoricalChart GetCurrencyChartCustomResult;
        
        public GetCurrencyChartCustomResponse() {
        }
        
        public GetCurrencyChartCustomResponse(currencyClient.wsr.HistoricalChart GetCurrencyChartCustomResult) {
            this.GetCurrencyChartCustomResult = GetCurrencyChartCustomResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyChartCustomBinary", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyChartCustomBinaryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public currencyClient.wsr.HistoricalPeriodTypes PeriodType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=4)]
        public currencyClient.wsr.StockChartStyles Style;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=5)]
        public int Width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=6)]
        public int Height;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=7)]
        public currencyClient.wsr.ChartDesign Design;
        
        public GetCurrencyChartCustomBinaryRequest() {
        }
        
        public GetCurrencyChartCustomBinaryRequest(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, currencyClient.wsr.ChartDesign Design) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.PeriodType = PeriodType;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.Style = Style;
            this.Width = Width;
            this.Height = Height;
            this.Design = Design;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyChartCustomBinaryResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyChartCustomBinaryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.ChartBinary GetCurrencyChartCustomBinaryResult;
        
        public GetCurrencyChartCustomBinaryResponse() {
        }
        
        public GetCurrencyChartCustomBinaryResponse(currencyClient.wsr.ChartBinary GetCurrencyChartCustomBinaryResult) {
            this.GetCurrencyChartCustomBinaryResult = GetCurrencyChartCustomBinaryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyChart", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyChartRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public currencyClient.wsr.HistoricalPeriodTypes PeriodType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=4)]
        public currencyClient.wsr.StockChartStyles Style;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=5)]
        public int Width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=6)]
        public int Height;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=7)]
        public string Preset;
        
        public GetCurrencyChartRequest() {
        }
        
        public GetCurrencyChartRequest(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string Preset) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.PeriodType = PeriodType;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.Style = Style;
            this.Width = Width;
            this.Height = Height;
            this.Preset = Preset;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyChartResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyChartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HistoricalChart GetCurrencyChartResult;
        
        public GetCurrencyChartResponse() {
        }
        
        public GetCurrencyChartResponse(currencyClient.wsr.HistoricalChart GetCurrencyChartResult) {
            this.GetCurrencyChartResult = GetCurrencyChartResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyChartBinary", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyChartBinaryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public currencyClient.wsr.HistoricalPeriodTypes PeriodType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string StartDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string EndDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=4)]
        public currencyClient.wsr.StockChartStyles Style;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=5)]
        public int Width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=6)]
        public int Height;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=7)]
        public string Preset;
        
        public GetCurrencyChartBinaryRequest() {
        }
        
        public GetCurrencyChartBinaryRequest(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string Preset) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.PeriodType = PeriodType;
            this.StartDate = StartDate;
            this.EndDate = EndDate;
            this.Style = Style;
            this.Width = Width;
            this.Height = Height;
            this.Preset = Preset;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyChartBinaryResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyChartBinaryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.ChartBinary GetCurrencyChartBinaryResult;
        
        public GetCurrencyChartBinaryResponse() {
        }
        
        public GetCurrencyChartBinaryResponse(currencyClient.wsr.ChartBinary GetCurrencyChartBinaryResult) {
            this.GetCurrencyChartBinaryResult = GetCurrencyChartBinaryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyIntradayChart", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyIntradayChartRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=4)]
        public currencyClient.wsr.StockChartStyles Style;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=5)]
        public int Width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=6)]
        public int Height;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=7)]
        public string PeriodType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=8)]
        public int TickPeriods;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=9)]
        public string Preset;
        
        public GetCurrencyIntradayChartRequest() {
        }
        
        public GetCurrencyIntradayChartRequest(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string TimeZone, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string PeriodType, int TickPeriods, string Preset) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.TimeZone = TimeZone;
            this.Style = Style;
            this.Width = Width;
            this.Height = Height;
            this.PeriodType = PeriodType;
            this.TickPeriods = TickPeriods;
            this.Preset = Preset;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyIntradayChartResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyIntradayChartResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CurrencyChartIntraday GetCurrencyIntradayChartResult;
        
        public GetCurrencyIntradayChartResponse() {
        }
        
        public GetCurrencyIntradayChartResponse(currencyClient.wsr.CurrencyChartIntraday GetCurrencyIntradayChartResult) {
            this.GetCurrencyIntradayChartResult = GetCurrencyIntradayChartResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyIntradayChartCustomBinary", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyIntradayChartCustomBinaryRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=4)]
        public currencyClient.wsr.StockChartStyles Style;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=5)]
        public int Width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=6)]
        public int Height;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=7)]
        public string PeriodType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=8)]
        public int TickPeriods;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=9)]
        public currencyClient.wsr.ChartDesign Design;
        
        public GetCurrencyIntradayChartCustomBinaryRequest() {
        }
        
        public GetCurrencyIntradayChartCustomBinaryRequest(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string TimeZone, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string PeriodType, int TickPeriods, currencyClient.wsr.ChartDesign Design) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.TimeZone = TimeZone;
            this.Style = Style;
            this.Width = Width;
            this.Height = Height;
            this.PeriodType = PeriodType;
            this.TickPeriods = TickPeriods;
            this.Design = Design;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyIntradayChartCustomBinaryResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyIntradayChartCustomBinaryResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.ChartBinary GetCurrencyIntradayChartCustomBinaryResult;
        
        public GetCurrencyIntradayChartCustomBinaryResponse() {
        }
        
        public GetCurrencyIntradayChartCustomBinaryResponse(currencyClient.wsr.ChartBinary GetCurrencyIntradayChartCustomBinaryResult) {
            this.GetCurrencyIntradayChartCustomBinaryResult = GetCurrencyIntradayChartCustomBinaryResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyIntradayChartCustom", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyIntradayChartCustomRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string TimeZone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=4)]
        public currencyClient.wsr.StockChartStyles Style;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=5)]
        public int Width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=6)]
        public int Height;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=7)]
        public string PeriodType;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=8)]
        public int TickPeriods;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=9)]
        public currencyClient.wsr.ChartDesign Design;
        
        public GetCurrencyIntradayChartCustomRequest() {
        }
        
        public GetCurrencyIntradayChartCustomRequest(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string TimeZone, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string PeriodType, int TickPeriods, currencyClient.wsr.ChartDesign Design) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.TimeZone = TimeZone;
            this.Style = Style;
            this.Width = Width;
            this.Height = Height;
            this.PeriodType = PeriodType;
            this.TickPeriods = TickPeriods;
            this.Design = Design;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCurrencyIntradayChartCustomResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetCurrencyIntradayChartCustomResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.CurrencyChartIntraday GetCurrencyIntradayChartCustomResult;
        
        public GetCurrencyIntradayChartCustomResponse() {
        }
        
        public GetCurrencyIntradayChartCustomResponse(currencyClient.wsr.CurrencyChartIntraday GetCurrencyIntradayChartCustomResult) {
            this.GetCurrencyIntradayChartCustomResult = GetCurrencyIntradayChartCustomResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetChartDesign", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetChartDesignRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        public GetChartDesignRequest() {
        }
        
        public GetChartDesignRequest(currencyClient.wsr.Header Header) {
            this.Header = Header;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetChartDesignResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetChartDesignResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.ChartDesign GetChartDesignResult;
        
        public GetChartDesignResponse() {
        }
        
        public GetChartDesignResponse(currencyClient.wsr.ChartDesign GetChartDesignResult) {
            this.GetChartDesignResult = GetChartDesignResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTick", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetTickRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string Time;
        
        public GetTickRequest() {
        }
        
        public GetTickRequest(currencyClient.wsr.Header Header, string Symbol, string Time) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.Time = Time;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTickResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetTickResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.SingleTick GetTickResult;
        
        public GetTickResponse() {
        }
        
        public GetTickResponse(currencyClient.wsr.SingleTick GetTickResult) {
            this.GetTickResult = GetTickResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTicks", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetTicksRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public currencyClient.wsr.TickPeriod TickPrecision;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=4)]
        public int TickPeriods;
        
        public GetTicksRequest() {
        }
        
        public GetTicksRequest(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, currencyClient.wsr.TickPeriod TickPrecision, int TickPeriods) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.TickPrecision = TickPrecision;
            this.TickPeriods = TickPeriods;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetTicksResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetTicksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.Ticks GetTicksResult;
        
        public GetTicksResponse() {
        }
        
        public GetTicksResponse(currencyClient.wsr.Ticks GetTicksResult) {
            this.GetTicksResult = GetTicksResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalTicks", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalTicksRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=3)]
        public string AsOfDate;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=4)]
        public currencyClient.wsr.TickPeriod TickPrecision;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=5)]
        public int TickPeriods;
        
        public GetHistoricalTicksRequest() {
        }
        
        public GetHistoricalTicksRequest(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string AsOfDate, currencyClient.wsr.TickPeriod TickPrecision, int TickPeriods) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartTime = StartTime;
            this.EndTime = EndTime;
            this.AsOfDate = AsOfDate;
            this.TickPrecision = TickPrecision;
            this.TickPeriods = TickPeriods;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalTicksResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalTicksResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.Ticks GetHistoricalTicksResult;
        
        public GetHistoricalTicksResponse() {
        }
        
        public GetHistoricalTicksResponse(currencyClient.wsr.Ticks GetHistoricalTicksResult) {
            this.GetHistoricalTicksResult = GetHistoricalTicksResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalHighLow", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalHighLowRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartDateTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndDateTime;
        
        public GetHistoricalHighLowRequest() {
        }
        
        public GetHistoricalHighLowRequest(currencyClient.wsr.Header Header, string Symbol, string StartDateTime, string EndDateTime) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetHistoricalHighLowResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetHistoricalHighLowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HighLowTick GetHistoricalHighLowResult;
        
        public GetHistoricalHighLowResponse() {
        }
        
        public GetHistoricalHighLowResponse(currencyClient.wsr.HighLowTick GetHistoricalHighLowResult) {
            this.GetHistoricalHighLowResult = GetHistoricalHighLowResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIntradayHighLow", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetIntradayHighLowRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.xignite.com/services/")]
        public currencyClient.wsr.Header Header;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public string Symbol;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=1)]
        public string StartDateTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=2)]
        public string EndDateTime;
        
        public GetIntradayHighLowRequest() {
        }
        
        public GetIntradayHighLowRequest(currencyClient.wsr.Header Header, string Symbol, string StartDateTime, string EndDateTime) {
            this.Header = Header;
            this.Symbol = Symbol;
            this.StartDateTime = StartDateTime;
            this.EndDateTime = EndDateTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetIntradayHighLowResponse", WrapperNamespace="http://www.xignite.com/services/", IsWrapped=true)]
    public partial class GetIntradayHighLowResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.xignite.com/services/", Order=0)]
        public currencyClient.wsr.HighLowTick GetIntradayHighLowResult;
        
        public GetIntradayHighLowResponse() {
        }
        
        public GetIntradayHighLowResponse(currencyClient.wsr.HighLowTick GetIntradayHighLowResult) {
            this.GetIntradayHighLowResult = GetIntradayHighLowResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface XigniteCurrenciesSoapChannel : currencyClient.wsr.XigniteCurrenciesSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class XigniteCurrenciesSoapClient : System.ServiceModel.ClientBase<currencyClient.wsr.XigniteCurrenciesSoap>, currencyClient.wsr.XigniteCurrenciesSoap {
        
        public XigniteCurrenciesSoapClient() {
        }
        
        public XigniteCurrenciesSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public XigniteCurrenciesSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XigniteCurrenciesSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public XigniteCurrenciesSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.ListCurrenciesResponse currencyClient.wsr.XigniteCurrenciesSoap.ListCurrencies(currencyClient.wsr.ListCurrenciesRequest request) {
            return base.Channel.ListCurrencies(request);
        }
        
        public currencyClient.wsr.CurrencyList ListCurrencies(currencyClient.wsr.Header Header) {
            currencyClient.wsr.ListCurrenciesRequest inValue = new currencyClient.wsr.ListCurrenciesRequest();
            inValue.Header = Header;
            currencyClient.wsr.ListCurrenciesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).ListCurrencies(inValue);
            return retVal.ListCurrenciesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.ListCurrenciesResponse> currencyClient.wsr.XigniteCurrenciesSoap.ListCurrenciesAsync(currencyClient.wsr.ListCurrenciesRequest request) {
            return base.Channel.ListCurrenciesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.ListCurrenciesResponse> ListCurrenciesAsync(currencyClient.wsr.Header Header) {
            currencyClient.wsr.ListCurrenciesRequest inValue = new currencyClient.wsr.ListCurrenciesRequest();
            inValue.Header = Header;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).ListCurrenciesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.ListActiveCurrenciesResponse currencyClient.wsr.XigniteCurrenciesSoap.ListActiveCurrencies(currencyClient.wsr.ListActiveCurrenciesRequest request) {
            return base.Channel.ListActiveCurrencies(request);
        }
        
        public currencyClient.wsr.CurrencyList ListActiveCurrencies(currencyClient.wsr.Header Header) {
            currencyClient.wsr.ListActiveCurrenciesRequest inValue = new currencyClient.wsr.ListActiveCurrenciesRequest();
            inValue.Header = Header;
            currencyClient.wsr.ListActiveCurrenciesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).ListActiveCurrencies(inValue);
            return retVal.ListActiveCurrenciesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.ListActiveCurrenciesResponse> currencyClient.wsr.XigniteCurrenciesSoap.ListActiveCurrenciesAsync(currencyClient.wsr.ListActiveCurrenciesRequest request) {
            return base.Channel.ListActiveCurrenciesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.ListActiveCurrenciesResponse> ListActiveCurrenciesAsync(currencyClient.wsr.Header Header) {
            currencyClient.wsr.ListActiveCurrenciesRequest inValue = new currencyClient.wsr.ListActiveCurrenciesRequest();
            inValue.Header = Header;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).ListActiveCurrenciesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.ListOfficialRatesResponse currencyClient.wsr.XigniteCurrenciesSoap.ListOfficialRates(currencyClient.wsr.ListOfficialRatesRequest request) {
            return base.Channel.ListOfficialRates(request);
        }
        
        public currencyClient.wsr.OfficialRates ListOfficialRates(currencyClient.wsr.Header Header) {
            currencyClient.wsr.ListOfficialRatesRequest inValue = new currencyClient.wsr.ListOfficialRatesRequest();
            inValue.Header = Header;
            currencyClient.wsr.ListOfficialRatesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).ListOfficialRates(inValue);
            return retVal.ListOfficialRatesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.ListOfficialRatesResponse> currencyClient.wsr.XigniteCurrenciesSoap.ListOfficialRatesAsync(currencyClient.wsr.ListOfficialRatesRequest request) {
            return base.Channel.ListOfficialRatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.ListOfficialRatesResponse> ListOfficialRatesAsync(currencyClient.wsr.Header Header) {
            currencyClient.wsr.ListOfficialRatesRequest inValue = new currencyClient.wsr.ListOfficialRatesRequest();
            inValue.Header = Header;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).ListOfficialRatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetUnitOfAccountResponse currencyClient.wsr.XigniteCurrenciesSoap.GetUnitOfAccount(currencyClient.wsr.GetUnitOfAccountRequest request) {
            return base.Channel.GetUnitOfAccount(request);
        }
        
        public currencyClient.wsr.UnitOfAccount GetUnitOfAccount(currencyClient.wsr.Header Header, string Currency, string AsOfDate) {
            currencyClient.wsr.GetUnitOfAccountRequest inValue = new currencyClient.wsr.GetUnitOfAccountRequest();
            inValue.Header = Header;
            inValue.Currency = Currency;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetUnitOfAccountResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetUnitOfAccount(inValue);
            return retVal.GetUnitOfAccountResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetUnitOfAccountResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetUnitOfAccountAsync(currencyClient.wsr.GetUnitOfAccountRequest request) {
            return base.Channel.GetUnitOfAccountAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetUnitOfAccountResponse> GetUnitOfAccountAsync(currencyClient.wsr.Header Header, string Currency, string AsOfDate) {
            currencyClient.wsr.GetUnitOfAccountRequest inValue = new currencyClient.wsr.GetUnitOfAccountRequest();
            inValue.Header = Header;
            inValue.Currency = Currency;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetUnitOfAccountAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.ConvertRealTimeValueResponse currencyClient.wsr.XigniteCurrenciesSoap.ConvertRealTimeValue(currencyClient.wsr.ConvertRealTimeValueRequest request) {
            return base.Channel.ConvertRealTimeValue(request);
        }
        
        public currencyClient.wsr.ExchangeConversion ConvertRealTimeValue(currencyClient.wsr.Header Header, string From, string To, double Amount) {
            currencyClient.wsr.ConvertRealTimeValueRequest inValue = new currencyClient.wsr.ConvertRealTimeValueRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            inValue.Amount = Amount;
            currencyClient.wsr.ConvertRealTimeValueResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).ConvertRealTimeValue(inValue);
            return retVal.ConvertRealTimeValueResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.ConvertRealTimeValueResponse> currencyClient.wsr.XigniteCurrenciesSoap.ConvertRealTimeValueAsync(currencyClient.wsr.ConvertRealTimeValueRequest request) {
            return base.Channel.ConvertRealTimeValueAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.ConvertRealTimeValueResponse> ConvertRealTimeValueAsync(currencyClient.wsr.Header Header, string From, string To, double Amount) {
            currencyClient.wsr.ConvertRealTimeValueRequest inValue = new currencyClient.wsr.ConvertRealTimeValueRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            inValue.Amount = Amount;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).ConvertRealTimeValueAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.ConvertHistoricalValueResponse currencyClient.wsr.XigniteCurrenciesSoap.ConvertHistoricalValue(currencyClient.wsr.ConvertHistoricalValueRequest request) {
            return base.Channel.ConvertHistoricalValue(request);
        }
        
        public currencyClient.wsr.ExchangeConversion ConvertHistoricalValue(currencyClient.wsr.Header Header, string From, string To, string AsOfDate, double Amount) {
            currencyClient.wsr.ConvertHistoricalValueRequest inValue = new currencyClient.wsr.ConvertHistoricalValueRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            inValue.AsOfDate = AsOfDate;
            inValue.Amount = Amount;
            currencyClient.wsr.ConvertHistoricalValueResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).ConvertHistoricalValue(inValue);
            return retVal.ConvertHistoricalValueResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.ConvertHistoricalValueResponse> currencyClient.wsr.XigniteCurrenciesSoap.ConvertHistoricalValueAsync(currencyClient.wsr.ConvertHistoricalValueRequest request) {
            return base.Channel.ConvertHistoricalValueAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.ConvertHistoricalValueResponse> ConvertHistoricalValueAsync(currencyClient.wsr.Header Header, string From, string To, string AsOfDate, double Amount) {
            currencyClient.wsr.ConvertHistoricalValueRequest inValue = new currencyClient.wsr.ConvertHistoricalValueRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            inValue.AsOfDate = AsOfDate;
            inValue.Amount = Amount;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).ConvertHistoricalValueAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetRealTimeForwardRateResponse currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeForwardRate(currencyClient.wsr.GetRealTimeForwardRateRequest request) {
            return base.Channel.GetRealTimeForwardRate(request);
        }
        
        public currencyClient.wsr.ForwardRate GetRealTimeForwardRate(currencyClient.wsr.Header Header, string From, string To) {
            currencyClient.wsr.GetRealTimeForwardRateRequest inValue = new currencyClient.wsr.GetRealTimeForwardRateRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            currencyClient.wsr.GetRealTimeForwardRateResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeForwardRate(inValue);
            return retVal.GetRealTimeForwardRateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeForwardRateResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeForwardRateAsync(currencyClient.wsr.GetRealTimeForwardRateRequest request) {
            return base.Channel.GetRealTimeForwardRateAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeForwardRateResponse> GetRealTimeForwardRateAsync(currencyClient.wsr.Header Header, string From, string To) {
            currencyClient.wsr.GetRealTimeForwardRateRequest inValue = new currencyClient.wsr.GetRealTimeForwardRateRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeForwardRateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetRealTimeCrossRateAsStringResponse currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateAsString(currencyClient.wsr.GetRealTimeCrossRateAsStringRequest request) {
            return base.Channel.GetRealTimeCrossRateAsString(request);
        }
        
        public currencyClient.wsr.CrossRate GetRealTimeCrossRateAsString(currencyClient.wsr.Header Header, string From, string To) {
            currencyClient.wsr.GetRealTimeCrossRateAsStringRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateAsStringRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            currencyClient.wsr.GetRealTimeCrossRateAsStringResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateAsString(inValue);
            return retVal.GetRealTimeCrossRateAsStringResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateAsStringResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateAsStringAsync(currencyClient.wsr.GetRealTimeCrossRateAsStringRequest request) {
            return base.Channel.GetRealTimeCrossRateAsStringAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateAsStringResponse> GetRealTimeCrossRateAsStringAsync(currencyClient.wsr.Header Header, string From, string To) {
            currencyClient.wsr.GetRealTimeCrossRateAsStringRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateAsStringRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateAsStringAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetLatestCrossRateResponse currencyClient.wsr.XigniteCurrenciesSoap.GetLatestCrossRate(currencyClient.wsr.GetLatestCrossRateRequest request) {
            return base.Channel.GetLatestCrossRate(request);
        }
        
        public currencyClient.wsr.CrossRate GetLatestCrossRate(currencyClient.wsr.Header Header, string From, string To) {
            currencyClient.wsr.GetLatestCrossRateRequest inValue = new currencyClient.wsr.GetLatestCrossRateRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            currencyClient.wsr.GetLatestCrossRateResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetLatestCrossRate(inValue);
            return retVal.GetLatestCrossRateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetLatestCrossRateResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetLatestCrossRateAsync(currencyClient.wsr.GetLatestCrossRateRequest request) {
            return base.Channel.GetLatestCrossRateAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetLatestCrossRateResponse> GetLatestCrossRateAsync(currencyClient.wsr.Header Header, string From, string To) {
            currencyClient.wsr.GetLatestCrossRateRequest inValue = new currencyClient.wsr.GetLatestCrossRateRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetLatestCrossRateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetLatestCrossRatesResponse currencyClient.wsr.XigniteCurrenciesSoap.GetLatestCrossRates(currencyClient.wsr.GetLatestCrossRatesRequest request) {
            return base.Channel.GetLatestCrossRates(request);
        }
        
        public currencyClient.wsr.CrossRate[] GetLatestCrossRates(currencyClient.wsr.Header Header, string From, string Tos) {
            currencyClient.wsr.GetLatestCrossRatesRequest inValue = new currencyClient.wsr.GetLatestCrossRatesRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.Tos = Tos;
            currencyClient.wsr.GetLatestCrossRatesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetLatestCrossRates(inValue);
            return retVal.GetLatestCrossRatesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetLatestCrossRatesResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetLatestCrossRatesAsync(currencyClient.wsr.GetLatestCrossRatesRequest request) {
            return base.Channel.GetLatestCrossRatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetLatestCrossRatesResponse> GetLatestCrossRatesAsync(currencyClient.wsr.Header Header, string From, string Tos) {
            currencyClient.wsr.GetLatestCrossRatesRequest inValue = new currencyClient.wsr.GetLatestCrossRatesRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.Tos = Tos;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetLatestCrossRatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetRealTimeCrossRateResponse currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRate(currencyClient.wsr.GetRealTimeCrossRateRequest request) {
            return base.Channel.GetRealTimeCrossRate(request);
        }
        
        public currencyClient.wsr.CrossRate GetRealTimeCrossRate(currencyClient.wsr.Header Header, currencyClient.wsr.Currencies From, currencyClient.wsr.Currencies To) {
            currencyClient.wsr.GetRealTimeCrossRateRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            currencyClient.wsr.GetRealTimeCrossRateResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRate(inValue);
            return retVal.GetRealTimeCrossRateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateAsync(currencyClient.wsr.GetRealTimeCrossRateRequest request) {
            return base.Channel.GetRealTimeCrossRateAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateResponse> GetRealTimeCrossRateAsync(currencyClient.wsr.Header Header, currencyClient.wsr.Currencies From, currencyClient.wsr.Currencies To) {
            currencyClient.wsr.GetRealTimeCrossRateRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetRealTimeCrossRateGMTResponse currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateGMT(currencyClient.wsr.GetRealTimeCrossRateGMTRequest request) {
            return base.Channel.GetRealTimeCrossRateGMT(request);
        }
        
        public currencyClient.wsr.CrossRate GetRealTimeCrossRateGMT(currencyClient.wsr.Header Header, currencyClient.wsr.Currencies From, currencyClient.wsr.Currencies To) {
            currencyClient.wsr.GetRealTimeCrossRateGMTRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateGMTRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            currencyClient.wsr.GetRealTimeCrossRateGMTResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateGMT(inValue);
            return retVal.GetRealTimeCrossRateGMTResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateGMTResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateGMTAsync(currencyClient.wsr.GetRealTimeCrossRateGMTRequest request) {
            return base.Channel.GetRealTimeCrossRateGMTAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateGMTResponse> GetRealTimeCrossRateGMTAsync(currencyClient.wsr.Header Header, currencyClient.wsr.Currencies From, currencyClient.wsr.Currencies To) {
            currencyClient.wsr.GetRealTimeCrossRateGMTRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateGMTRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateGMTAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetRawCrossRateResponse currencyClient.wsr.XigniteCurrenciesSoap.GetRawCrossRate(currencyClient.wsr.GetRawCrossRateRequest request) {
            return base.Channel.GetRawCrossRate(request);
        }
        
        public currencyClient.wsr.CrossRate GetRawCrossRate(currencyClient.wsr.Header Header, currencyClient.wsr.Currencies From, currencyClient.wsr.Currencies To) {
            currencyClient.wsr.GetRawCrossRateRequest inValue = new currencyClient.wsr.GetRawCrossRateRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            currencyClient.wsr.GetRawCrossRateResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRawCrossRate(inValue);
            return retVal.GetRawCrossRateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRawCrossRateResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetRawCrossRateAsync(currencyClient.wsr.GetRawCrossRateRequest request) {
            return base.Channel.GetRawCrossRateAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetRawCrossRateResponse> GetRawCrossRateAsync(currencyClient.wsr.Header Header, currencyClient.wsr.Currencies From, currencyClient.wsr.Currencies To) {
            currencyClient.wsr.GetRawCrossRateRequest inValue = new currencyClient.wsr.GetRawCrossRateRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRawCrossRateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetRawCrossRatesResponse currencyClient.wsr.XigniteCurrenciesSoap.GetRawCrossRates(currencyClient.wsr.GetRawCrossRatesRequest request) {
            return base.Channel.GetRawCrossRates(request);
        }
        
        public currencyClient.wsr.CrossRate[] GetRawCrossRates(currencyClient.wsr.Header Header, string Symbols) {
            currencyClient.wsr.GetRawCrossRatesRequest inValue = new currencyClient.wsr.GetRawCrossRatesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            currencyClient.wsr.GetRawCrossRatesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRawCrossRates(inValue);
            return retVal.GetRawCrossRatesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRawCrossRatesResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetRawCrossRatesAsync(currencyClient.wsr.GetRawCrossRatesRequest request) {
            return base.Channel.GetRawCrossRatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetRawCrossRatesResponse> GetRawCrossRatesAsync(currencyClient.wsr.Header Header, string Symbols) {
            currencyClient.wsr.GetRawCrossRatesRequest inValue = new currencyClient.wsr.GetRawCrossRatesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRawCrossRatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetRealTimeCrossRatesResponse currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRates(currencyClient.wsr.GetRealTimeCrossRatesRequest request) {
            return base.Channel.GetRealTimeCrossRates(request);
        }
        
        public currencyClient.wsr.CrossRate[] GetRealTimeCrossRates(currencyClient.wsr.Header Header, string Symbols) {
            currencyClient.wsr.GetRealTimeCrossRatesRequest inValue = new currencyClient.wsr.GetRealTimeCrossRatesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            currencyClient.wsr.GetRealTimeCrossRatesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRates(inValue);
            return retVal.GetRealTimeCrossRatesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRatesResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRatesAsync(currencyClient.wsr.GetRealTimeCrossRatesRequest request) {
            return base.Channel.GetRealTimeCrossRatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRatesResponse> GetRealTimeCrossRatesAsync(currencyClient.wsr.Header Header, string Symbols) {
            currencyClient.wsr.GetRealTimeCrossRatesRequest inValue = new currencyClient.wsr.GetRealTimeCrossRatesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRateTablesResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateTables(currencyClient.wsr.GetHistoricalCrossRateTablesRequest request) {
            return base.Channel.GetHistoricalCrossRateTables(request);
        }
        
        public currencyClient.wsr.CrossRateTable[] GetHistoricalCrossRateTables(currencyClient.wsr.Header Header, string Symbols, string StartDate, string EndDate) {
            currencyClient.wsr.GetHistoricalCrossRateTablesRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateTablesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            currencyClient.wsr.GetHistoricalCrossRateTablesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateTables(inValue);
            return retVal.GetHistoricalCrossRateTablesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTablesResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateTablesAsync(currencyClient.wsr.GetHistoricalCrossRateTablesRequest request) {
            return base.Channel.GetHistoricalCrossRateTablesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTablesResponse> GetHistoricalCrossRateTablesAsync(currencyClient.wsr.Header Header, string Symbols, string StartDate, string EndDate) {
            currencyClient.wsr.GetHistoricalCrossRateTablesRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateTablesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateTablesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRateTablesBidAskResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateTablesBidAsk(currencyClient.wsr.GetHistoricalCrossRateTablesBidAskRequest request) {
            return base.Channel.GetHistoricalCrossRateTablesBidAsk(request);
        }
        
        public currencyClient.wsr.CrossRateTableWithBidAsk[] GetHistoricalCrossRateTablesBidAsk(currencyClient.wsr.Header Header, string Symbols, string StartDate, string EndDate) {
            currencyClient.wsr.GetHistoricalCrossRateTablesBidAskRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateTablesBidAskRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            currencyClient.wsr.GetHistoricalCrossRateTablesBidAskResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateTablesBidAsk(inValue);
            return retVal.GetHistoricalCrossRateTablesBidAskResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTablesBidAskResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateTablesBidAskAsync(currencyClient.wsr.GetHistoricalCrossRateTablesBidAskRequest request) {
            return base.Channel.GetHistoricalCrossRateTablesBidAskAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTablesBidAskResponse> GetHistoricalCrossRateTablesBidAskAsync(currencyClient.wsr.Header Header, string Symbols, string StartDate, string EndDate) {
            currencyClient.wsr.GetHistoricalCrossRateTablesBidAskRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateTablesBidAskRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateTablesBidAskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetCurrencyReportResponse currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyReport(currencyClient.wsr.GetCurrencyReportRequest request) {
            return base.Channel.GetCurrencyReport(request);
        }
        
        public currencyClient.wsr.Report GetCurrencyReport(currencyClient.wsr.Header Header, string From, string To, string StartDate, string EndDate) {
            currencyClient.wsr.GetCurrencyReportRequest inValue = new currencyClient.wsr.GetCurrencyReportRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            currencyClient.wsr.GetCurrencyReportResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyReport(inValue);
            return retVal.GetCurrencyReportResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyReportResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyReportAsync(currencyClient.wsr.GetCurrencyReportRequest request) {
            return base.Channel.GetCurrencyReportAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyReportResponse> GetCurrencyReportAsync(currencyClient.wsr.Header Header, string From, string To, string StartDate, string EndDate) {
            currencyClient.wsr.GetCurrencyReportRequest inValue = new currencyClient.wsr.GetCurrencyReportRequest();
            inValue.Header = Header;
            inValue.From = From;
            inValue.To = To;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyReportAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRateTableResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateTable(currencyClient.wsr.GetHistoricalCrossRateTableRequest request) {
            return base.Channel.GetHistoricalCrossRateTable(request);
        }
        
        public currencyClient.wsr.CrossRateTable GetHistoricalCrossRateTable(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRateTableRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateTableRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetHistoricalCrossRateTableResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateTable(inValue);
            return retVal.GetHistoricalCrossRateTableResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTableResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateTableAsync(currencyClient.wsr.GetHistoricalCrossRateTableRequest request) {
            return base.Channel.GetHistoricalCrossRateTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTableResponse> GetHistoricalCrossRateTableAsync(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRateTableRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateTableRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateTableAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRateTableBidAskResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateTableBidAsk(currencyClient.wsr.GetHistoricalCrossRateTableBidAskRequest request) {
            return base.Channel.GetHistoricalCrossRateTableBidAsk(request);
        }
        
        public currencyClient.wsr.CrossRateTableWithBidAsk GetHistoricalCrossRateTableBidAsk(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRateTableBidAskRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateTableBidAskRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetHistoricalCrossRateTableBidAskResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateTableBidAsk(inValue);
            return retVal.GetHistoricalCrossRateTableBidAskResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTableBidAskResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateTableBidAskAsync(currencyClient.wsr.GetHistoricalCrossRateTableBidAskRequest request) {
            return base.Channel.GetHistoricalCrossRateTableBidAskAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTableBidAskResponse> GetHistoricalCrossRateTableBidAskAsync(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRateTableBidAskRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateTableBidAskRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateTableBidAskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetRealTimeCrossRateTableResponse currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateTable(currencyClient.wsr.GetRealTimeCrossRateTableRequest request) {
            return base.Channel.GetRealTimeCrossRateTable(request);
        }
        
        public currencyClient.wsr.CrossRateTable GetRealTimeCrossRateTable(currencyClient.wsr.Header Header, string Symbols) {
            currencyClient.wsr.GetRealTimeCrossRateTableRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateTableRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            currencyClient.wsr.GetRealTimeCrossRateTableResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateTable(inValue);
            return retVal.GetRealTimeCrossRateTableResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateTableResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateTableAsync(currencyClient.wsr.GetRealTimeCrossRateTableRequest request) {
            return base.Channel.GetRealTimeCrossRateTableAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateTableResponse> GetRealTimeCrossRateTableAsync(currencyClient.wsr.Header Header, string Symbols) {
            currencyClient.wsr.GetRealTimeCrossRateTableRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateTableRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateTableAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskResponse currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateTableWithBidAsk(currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskRequest request) {
            return base.Channel.GetRealTimeCrossRateTableWithBidAsk(request);
        }
        
        public currencyClient.wsr.CrossRateTableWithBidAsk GetRealTimeCrossRateTableWithBidAsk(currencyClient.wsr.Header Header, string Symbols) {
            currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateTableWithBidAsk(inValue);
            return retVal.GetRealTimeCrossRateTableWithBidAskResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateTableWithBidAskAsync(currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskRequest request) {
            return base.Channel.GetRealTimeCrossRateTableWithBidAskAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskResponse> GetRealTimeCrossRateTableWithBidAskAsync(currencyClient.wsr.Header Header, string Symbols) {
            currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateTableWithBidAskRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateTableWithBidAskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetAllCrossRatesForACurrencyResponse currencyClient.wsr.XigniteCurrenciesSoap.GetAllCrossRatesForACurrency(currencyClient.wsr.GetAllCrossRatesForACurrencyRequest request) {
            return base.Channel.GetAllCrossRatesForACurrency(request);
        }
        
        public currencyClient.wsr.CrossRateTableLineWithBidAsk GetAllCrossRatesForACurrency(currencyClient.wsr.Header Header, string Symbol) {
            currencyClient.wsr.GetAllCrossRatesForACurrencyRequest inValue = new currencyClient.wsr.GetAllCrossRatesForACurrencyRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            currencyClient.wsr.GetAllCrossRatesForACurrencyResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetAllCrossRatesForACurrency(inValue);
            return retVal.GetAllCrossRatesForACurrencyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetAllCrossRatesForACurrencyResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetAllCrossRatesForACurrencyAsync(currencyClient.wsr.GetAllCrossRatesForACurrencyRequest request) {
            return base.Channel.GetAllCrossRatesForACurrencyAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetAllCrossRatesForACurrencyResponse> GetAllCrossRatesForACurrencyAsync(currencyClient.wsr.Header Header, string Symbol) {
            currencyClient.wsr.GetAllCrossRatesForACurrencyRequest inValue = new currencyClient.wsr.GetAllCrossRatesForACurrencyRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetAllCrossRatesForACurrencyAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLResponse currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateTableAsHTML(currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLRequest request) {
            return base.Channel.GetRealTimeCrossRateTableAsHTML(request);
        }
        
        public currencyClient.wsr.HTMLCrossRateTable GetRealTimeCrossRateTableAsHTML(currencyClient.wsr.Header Header, string Symbols, string ColumnHeaderStyle, string LineHeaderStyle, string CellStyle) {
            currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.ColumnHeaderStyle = ColumnHeaderStyle;
            inValue.LineHeaderStyle = LineHeaderStyle;
            inValue.CellStyle = CellStyle;
            currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateTableAsHTML(inValue);
            return retVal.GetRealTimeCrossRateTableAsHTMLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetRealTimeCrossRateTableAsHTMLAsync(currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLRequest request) {
            return base.Channel.GetRealTimeCrossRateTableAsHTMLAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLResponse> GetRealTimeCrossRateTableAsHTMLAsync(currencyClient.wsr.Header Header, string Symbols, string ColumnHeaderStyle, string LineHeaderStyle, string CellStyle) {
            currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLRequest inValue = new currencyClient.wsr.GetRealTimeCrossRateTableAsHTMLRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.ColumnHeaderStyle = ColumnHeaderStyle;
            inValue.LineHeaderStyle = LineHeaderStyle;
            inValue.CellStyle = CellStyle;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetRealTimeCrossRateTableAsHTMLAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLResponse currencyClient.wsr.XigniteCurrenciesSoap.GetSimpleRealTimeCrossRateTableAsHTML(currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLRequest request) {
            return base.Channel.GetSimpleRealTimeCrossRateTableAsHTML(request);
        }
        
        public currencyClient.wsr.HTMLCrossRateTable GetSimpleRealTimeCrossRateTableAsHTML(currencyClient.wsr.Header Header, string Symbols, string ColumnHeaderStyle, string LineHeaderStyle, string CellStyle) {
            currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLRequest inValue = new currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.ColumnHeaderStyle = ColumnHeaderStyle;
            inValue.LineHeaderStyle = LineHeaderStyle;
            inValue.CellStyle = CellStyle;
            currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetSimpleRealTimeCrossRateTableAsHTML(inValue);
            return retVal.GetSimpleRealTimeCrossRateTableAsHTMLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetSimpleRealTimeCrossRateTableAsHTMLAsync(currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLRequest request) {
            return base.Channel.GetSimpleRealTimeCrossRateTableAsHTMLAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLResponse> GetSimpleRealTimeCrossRateTableAsHTMLAsync(currencyClient.wsr.Header Header, string Symbols, string ColumnHeaderStyle, string LineHeaderStyle, string CellStyle) {
            currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLRequest inValue = new currencyClient.wsr.GetSimpleRealTimeCrossRateTableAsHTMLRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.ColumnHeaderStyle = ColumnHeaderStyle;
            inValue.LineHeaderStyle = LineHeaderStyle;
            inValue.CellStyle = CellStyle;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetSimpleRealTimeCrossRateTableAsHTMLAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateTableAsHTML(currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLRequest request) {
            return base.Channel.GetHistoricalCrossRateTableAsHTML(request);
        }
        
        public currencyClient.wsr.HTMLCrossRateTable GetHistoricalCrossRateTableAsHTML(currencyClient.wsr.Header Header, string Symbols, string AsOfDate, string ColumnHeaderStyle, string LineHeaderStyle, string CellStyle) {
            currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            inValue.ColumnHeaderStyle = ColumnHeaderStyle;
            inValue.LineHeaderStyle = LineHeaderStyle;
            inValue.CellStyle = CellStyle;
            currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateTableAsHTML(inValue);
            return retVal.GetHistoricalCrossRateTableAsHTMLResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateTableAsHTMLAsync(currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLRequest request) {
            return base.Channel.GetHistoricalCrossRateTableAsHTMLAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLResponse> GetHistoricalCrossRateTableAsHTMLAsync(currencyClient.wsr.Header Header, string Symbols, string AsOfDate, string ColumnHeaderStyle, string LineHeaderStyle, string CellStyle) {
            currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateTableAsHTMLRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            inValue.ColumnHeaderStyle = ColumnHeaderStyle;
            inValue.LineHeaderStyle = LineHeaderStyle;
            inValue.CellStyle = CellStyle;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateTableAsHTMLAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRateResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRate(currencyClient.wsr.GetHistoricalCrossRateRequest request) {
            return base.Channel.GetHistoricalCrossRate(request);
        }
        
        public currencyClient.wsr.HistoricalCrossRate GetHistoricalCrossRate(currencyClient.wsr.Header Header, string Symbol, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRateRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetHistoricalCrossRateResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRate(inValue);
            return retVal.GetHistoricalCrossRateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateAsync(currencyClient.wsr.GetHistoricalCrossRateRequest request) {
            return base.Channel.GetHistoricalCrossRateAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateResponse> GetHistoricalCrossRateAsync(currencyClient.wsr.Header Header, string Symbol, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRateRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRatesResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRates(currencyClient.wsr.GetHistoricalCrossRatesRequest request) {
            return base.Channel.GetHistoricalCrossRates(request);
        }
        
        public currencyClient.wsr.HistoricalCrossRate[] GetHistoricalCrossRates(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRatesRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetHistoricalCrossRatesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRates(inValue);
            return retVal.GetHistoricalCrossRatesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesAsync(currencyClient.wsr.GetHistoricalCrossRatesRequest request) {
            return base.Channel.GetHistoricalCrossRatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesResponse> GetHistoricalCrossRatesAsync(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRatesRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRateBidAskResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateBidAsk(currencyClient.wsr.GetHistoricalCrossRateBidAskRequest request) {
            return base.Channel.GetHistoricalCrossRateBidAsk(request);
        }
        
        public currencyClient.wsr.FullHistoricalCrossRate GetHistoricalCrossRateBidAsk(currencyClient.wsr.Header Header, string Symbol, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRateBidAskRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateBidAskRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetHistoricalCrossRateBidAskResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateBidAsk(inValue);
            return retVal.GetHistoricalCrossRateBidAskResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateBidAskResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRateBidAskAsync(currencyClient.wsr.GetHistoricalCrossRateBidAskRequest request) {
            return base.Channel.GetHistoricalCrossRateBidAskAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRateBidAskResponse> GetHistoricalCrossRateBidAskAsync(currencyClient.wsr.Header Header, string Symbol, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRateBidAskRequest inValue = new currencyClient.wsr.GetHistoricalCrossRateBidAskRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRateBidAskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRatesBidAskResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesBidAsk(currencyClient.wsr.GetHistoricalCrossRatesBidAskRequest request) {
            return base.Channel.GetHistoricalCrossRatesBidAsk(request);
        }
        
        public currencyClient.wsr.FullHistoricalCrossRate[] GetHistoricalCrossRatesBidAsk(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRatesBidAskRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesBidAskRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetHistoricalCrossRatesBidAskResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesBidAsk(inValue);
            return retVal.GetHistoricalCrossRatesBidAskResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesBidAskResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesBidAskAsync(currencyClient.wsr.GetHistoricalCrossRatesBidAskRequest request) {
            return base.Channel.GetHistoricalCrossRatesBidAskAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesBidAskResponse> GetHistoricalCrossRatesBidAskAsync(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetHistoricalCrossRatesBidAskRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesBidAskRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesBidAskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRatesRangeResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesRange(currencyClient.wsr.GetHistoricalCrossRatesRangeRequest request) {
            return base.Channel.GetHistoricalCrossRatesRange(request);
        }
        
        public currencyClient.wsr.HistoricalCrossRates GetHistoricalCrossRatesRange(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            currencyClient.wsr.GetHistoricalCrossRatesRangeRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesRangeRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            currencyClient.wsr.GetHistoricalCrossRatesRangeResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesRange(inValue);
            return retVal.GetHistoricalCrossRatesRangeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesRangeResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesRangeAsync(currencyClient.wsr.GetHistoricalCrossRatesRangeRequest request) {
            return base.Channel.GetHistoricalCrossRatesRangeAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesRangeResponse> GetHistoricalCrossRatesRangeAsync(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            currencyClient.wsr.GetHistoricalCrossRatesRangeRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesRangeRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesRangeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesBidAskRange(currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeRequest request) {
            return base.Channel.GetHistoricalCrossRatesBidAskRange(request);
        }
        
        public currencyClient.wsr.FullHistoricalCrossRates GetHistoricalCrossRatesBidAskRange(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesBidAskRange(inValue);
            return retVal.GetHistoricalCrossRatesBidAskRangeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesBidAskRangeAsync(currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeRequest request) {
            return base.Channel.GetHistoricalCrossRatesBidAskRangeAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeResponse> GetHistoricalCrossRatesBidAskRangeAsync(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesBidAskRangeRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesBidAskRangeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRatesAsOfResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesAsOf(currencyClient.wsr.GetHistoricalCrossRatesAsOfRequest request) {
            return base.Channel.GetHistoricalCrossRatesAsOf(request);
        }
        
        public currencyClient.wsr.HistoricalCrossRates GetHistoricalCrossRatesAsOf(currencyClient.wsr.Header Header, string Symbol, System.DateTime EndDate, currencyClient.wsr.PeriodTypes PeriodType, int Periods) {
            currencyClient.wsr.GetHistoricalCrossRatesAsOfRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesAsOfRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.EndDate = EndDate;
            inValue.PeriodType = PeriodType;
            inValue.Periods = Periods;
            currencyClient.wsr.GetHistoricalCrossRatesAsOfResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesAsOf(inValue);
            return retVal.GetHistoricalCrossRatesAsOfResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesAsOfResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesAsOfAsync(currencyClient.wsr.GetHistoricalCrossRatesAsOfRequest request) {
            return base.Channel.GetHistoricalCrossRatesAsOfAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesAsOfResponse> GetHistoricalCrossRatesAsOfAsync(currencyClient.wsr.Header Header, string Symbol, System.DateTime EndDate, currencyClient.wsr.PeriodTypes PeriodType, int Periods) {
            currencyClient.wsr.GetHistoricalCrossRatesAsOfRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesAsOfRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.EndDate = EndDate;
            inValue.PeriodType = PeriodType;
            inValue.Periods = Periods;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesAsOfAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesBidAskAsOf(currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfRequest request) {
            return base.Channel.GetHistoricalCrossRatesBidAskAsOf(request);
        }
        
        public currencyClient.wsr.FullHistoricalCrossRates GetHistoricalCrossRatesBidAskAsOf(currencyClient.wsr.Header Header, string Symbol, System.DateTime EndDate, currencyClient.wsr.PeriodTypes PeriodType, int Periods) {
            currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.EndDate = EndDate;
            inValue.PeriodType = PeriodType;
            inValue.Periods = Periods;
            currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesBidAskAsOf(inValue);
            return retVal.GetHistoricalCrossRatesBidAskAsOfResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalCrossRatesBidAskAsOfAsync(currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfRequest request) {
            return base.Channel.GetHistoricalCrossRatesBidAskAsOfAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfResponse> GetHistoricalCrossRatesBidAskAsOfAsync(currencyClient.wsr.Header Header, string Symbol, System.DateTime EndDate, currencyClient.wsr.PeriodTypes PeriodType, int Periods) {
            currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfRequest inValue = new currencyClient.wsr.GetHistoricalCrossRatesBidAskAsOfRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.EndDate = EndDate;
            inValue.PeriodType = PeriodType;
            inValue.Periods = Periods;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalCrossRatesBidAskAsOfAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetOfficialCrossRateResponse currencyClient.wsr.XigniteCurrenciesSoap.GetOfficialCrossRate(currencyClient.wsr.GetOfficialCrossRateRequest request) {
            return base.Channel.GetOfficialCrossRate(request);
        }
        
        public currencyClient.wsr.HistoricalCrossRate GetOfficialCrossRate(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, currencyClient.wsr.Currencies Symbol, string AsOfDate) {
            currencyClient.wsr.GetOfficialCrossRateRequest inValue = new currencyClient.wsr.GetOfficialCrossRateRequest();
            inValue.Header = Header;
            inValue.CountryType = CountryType;
            inValue.Symbol = Symbol;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetOfficialCrossRateResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetOfficialCrossRate(inValue);
            return retVal.GetOfficialCrossRateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRateResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetOfficialCrossRateAsync(currencyClient.wsr.GetOfficialCrossRateRequest request) {
            return base.Channel.GetOfficialCrossRateAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRateResponse> GetOfficialCrossRateAsync(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, currencyClient.wsr.Currencies Symbol, string AsOfDate) {
            currencyClient.wsr.GetOfficialCrossRateRequest inValue = new currencyClient.wsr.GetOfficialCrossRateRequest();
            inValue.Header = Header;
            inValue.CountryType = CountryType;
            inValue.Symbol = Symbol;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetOfficialCrossRateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetOfficialCrossRatesResponse currencyClient.wsr.XigniteCurrenciesSoap.GetOfficialCrossRates(currencyClient.wsr.GetOfficialCrossRatesRequest request) {
            return base.Channel.GetOfficialCrossRates(request);
        }
        
        public currencyClient.wsr.HistoricalCrossRate[] GetOfficialCrossRates(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetOfficialCrossRatesRequest inValue = new currencyClient.wsr.GetOfficialCrossRatesRequest();
            inValue.Header = Header;
            inValue.CountryType = CountryType;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetOfficialCrossRatesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetOfficialCrossRates(inValue);
            return retVal.GetOfficialCrossRatesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRatesResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetOfficialCrossRatesAsync(currencyClient.wsr.GetOfficialCrossRatesRequest request) {
            return base.Channel.GetOfficialCrossRatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRatesResponse> GetOfficialCrossRatesAsync(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetOfficialCrossRatesRequest inValue = new currencyClient.wsr.GetOfficialCrossRatesRequest();
            inValue.Header = Header;
            inValue.CountryType = CountryType;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetOfficialCrossRatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetOfficialCrossRateBidAskResponse currencyClient.wsr.XigniteCurrenciesSoap.GetOfficialCrossRateBidAsk(currencyClient.wsr.GetOfficialCrossRateBidAskRequest request) {
            return base.Channel.GetOfficialCrossRateBidAsk(request);
        }
        
        public currencyClient.wsr.FullHistoricalCrossRate GetOfficialCrossRateBidAsk(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, currencyClient.wsr.Currencies Symbol, string AsOfDate) {
            currencyClient.wsr.GetOfficialCrossRateBidAskRequest inValue = new currencyClient.wsr.GetOfficialCrossRateBidAskRequest();
            inValue.Header = Header;
            inValue.CountryType = CountryType;
            inValue.Symbol = Symbol;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetOfficialCrossRateBidAskResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetOfficialCrossRateBidAsk(inValue);
            return retVal.GetOfficialCrossRateBidAskResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRateBidAskResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetOfficialCrossRateBidAskAsync(currencyClient.wsr.GetOfficialCrossRateBidAskRequest request) {
            return base.Channel.GetOfficialCrossRateBidAskAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRateBidAskResponse> GetOfficialCrossRateBidAskAsync(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, currencyClient.wsr.Currencies Symbol, string AsOfDate) {
            currencyClient.wsr.GetOfficialCrossRateBidAskRequest inValue = new currencyClient.wsr.GetOfficialCrossRateBidAskRequest();
            inValue.Header = Header;
            inValue.CountryType = CountryType;
            inValue.Symbol = Symbol;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetOfficialCrossRateBidAskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetOfficialCrossRatesBidAskResponse currencyClient.wsr.XigniteCurrenciesSoap.GetOfficialCrossRatesBidAsk(currencyClient.wsr.GetOfficialCrossRatesBidAskRequest request) {
            return base.Channel.GetOfficialCrossRatesBidAsk(request);
        }
        
        public currencyClient.wsr.FullHistoricalCrossRate[] GetOfficialCrossRatesBidAsk(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetOfficialCrossRatesBidAskRequest inValue = new currencyClient.wsr.GetOfficialCrossRatesBidAskRequest();
            inValue.Header = Header;
            inValue.CountryType = CountryType;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetOfficialCrossRatesBidAskResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetOfficialCrossRatesBidAsk(inValue);
            return retVal.GetOfficialCrossRatesBidAskResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRatesBidAskResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetOfficialCrossRatesBidAskAsync(currencyClient.wsr.GetOfficialCrossRatesBidAskRequest request) {
            return base.Channel.GetOfficialCrossRatesBidAskAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetOfficialCrossRatesBidAskResponse> GetOfficialCrossRatesBidAskAsync(currencyClient.wsr.Header Header, currencyClient.wsr.CountryTypes CountryType, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetOfficialCrossRatesBidAskRequest inValue = new currencyClient.wsr.GetOfficialCrossRatesBidAskRequest();
            inValue.Header = Header;
            inValue.CountryType = CountryType;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetOfficialCrossRatesBidAskAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetMutipleHistoricalCrossRatesResponse currencyClient.wsr.XigniteCurrenciesSoap.GetMutipleHistoricalCrossRates(currencyClient.wsr.GetMutipleHistoricalCrossRatesRequest request) {
            return base.Channel.GetMutipleHistoricalCrossRates(request);
        }
        
        public currencyClient.wsr.MultipleHistoricalCrossRates GetMutipleHistoricalCrossRates(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetMutipleHistoricalCrossRatesRequest inValue = new currencyClient.wsr.GetMutipleHistoricalCrossRatesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            currencyClient.wsr.GetMutipleHistoricalCrossRatesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetMutipleHistoricalCrossRates(inValue);
            return retVal.GetMutipleHistoricalCrossRatesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetMutipleHistoricalCrossRatesResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetMutipleHistoricalCrossRatesAsync(currencyClient.wsr.GetMutipleHistoricalCrossRatesRequest request) {
            return base.Channel.GetMutipleHistoricalCrossRatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetMutipleHistoricalCrossRatesResponse> GetMutipleHistoricalCrossRatesAsync(currencyClient.wsr.Header Header, string Symbols, string AsOfDate) {
            currencyClient.wsr.GetMutipleHistoricalCrossRatesRequest inValue = new currencyClient.wsr.GetMutipleHistoricalCrossRatesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.AsOfDate = AsOfDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetMutipleHistoricalCrossRatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetAverageHistoricalCrossRatesResponse currencyClient.wsr.XigniteCurrenciesSoap.GetAverageHistoricalCrossRates(currencyClient.wsr.GetAverageHistoricalCrossRatesRequest request) {
            return base.Channel.GetAverageHistoricalCrossRates(request);
        }
        
        public currencyClient.wsr.AverageHistoricalCrossRate[] GetAverageHistoricalCrossRates(currencyClient.wsr.Header Header, string Symbols, string StartDate, string EndDate) {
            currencyClient.wsr.GetAverageHistoricalCrossRatesRequest inValue = new currencyClient.wsr.GetAverageHistoricalCrossRatesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            currencyClient.wsr.GetAverageHistoricalCrossRatesResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetAverageHistoricalCrossRates(inValue);
            return retVal.GetAverageHistoricalCrossRatesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetAverageHistoricalCrossRatesResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetAverageHistoricalCrossRatesAsync(currencyClient.wsr.GetAverageHistoricalCrossRatesRequest request) {
            return base.Channel.GetAverageHistoricalCrossRatesAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetAverageHistoricalCrossRatesResponse> GetAverageHistoricalCrossRatesAsync(currencyClient.wsr.Header Header, string Symbols, string StartDate, string EndDate) {
            currencyClient.wsr.GetAverageHistoricalCrossRatesRequest inValue = new currencyClient.wsr.GetAverageHistoricalCrossRatesRequest();
            inValue.Header = Header;
            inValue.Symbols = Symbols;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetAverageHistoricalCrossRatesAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetAverageHistoricalCrossRateResponse currencyClient.wsr.XigniteCurrenciesSoap.GetAverageHistoricalCrossRate(currencyClient.wsr.GetAverageHistoricalCrossRateRequest request) {
            return base.Channel.GetAverageHistoricalCrossRate(request);
        }
        
        public currencyClient.wsr.AverageHistoricalCrossRate GetAverageHistoricalCrossRate(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            currencyClient.wsr.GetAverageHistoricalCrossRateRequest inValue = new currencyClient.wsr.GetAverageHistoricalCrossRateRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            currencyClient.wsr.GetAverageHistoricalCrossRateResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetAverageHistoricalCrossRate(inValue);
            return retVal.GetAverageHistoricalCrossRateResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetAverageHistoricalCrossRateResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetAverageHistoricalCrossRateAsync(currencyClient.wsr.GetAverageHistoricalCrossRateRequest request) {
            return base.Channel.GetAverageHistoricalCrossRateAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetAverageHistoricalCrossRateResponse> GetAverageHistoricalCrossRateAsync(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            currencyClient.wsr.GetAverageHistoricalCrossRateRequest inValue = new currencyClient.wsr.GetAverageHistoricalCrossRateRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetAverageHistoricalCrossRateAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalMonthlyCrossRatesRange(currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeRequest request) {
            return base.Channel.GetHistoricalMonthlyCrossRatesRange(request);
        }
        
        public currencyClient.wsr.FullHistoricalCrossRates GetHistoricalMonthlyCrossRatesRange(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeRequest inValue = new currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalMonthlyCrossRatesRange(inValue);
            return retVal.GetHistoricalMonthlyCrossRatesRangeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalMonthlyCrossRatesRangeAsync(currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeRequest request) {
            return base.Channel.GetHistoricalMonthlyCrossRatesRangeAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeResponse> GetHistoricalMonthlyCrossRatesRangeAsync(currencyClient.wsr.Header Header, string Symbol, string StartDate, string EndDate) {
            currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeRequest inValue = new currencyClient.wsr.GetHistoricalMonthlyCrossRatesRangeRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalMonthlyCrossRatesRangeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetCrossRateChangeResponse currencyClient.wsr.XigniteCurrenciesSoap.GetCrossRateChange(currencyClient.wsr.GetCrossRateChangeRequest request) {
            return base.Channel.GetCrossRateChange(request);
        }
        
        public currencyClient.wsr.CrossRateChange GetCrossRateChange(currencyClient.wsr.Header Header, string Symbol) {
            currencyClient.wsr.GetCrossRateChangeRequest inValue = new currencyClient.wsr.GetCrossRateChangeRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            currencyClient.wsr.GetCrossRateChangeResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCrossRateChange(inValue);
            return retVal.GetCrossRateChangeResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCrossRateChangeResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetCrossRateChangeAsync(currencyClient.wsr.GetCrossRateChangeRequest request) {
            return base.Channel.GetCrossRateChangeAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetCrossRateChangeResponse> GetCrossRateChangeAsync(currencyClient.wsr.Header Header, string Symbol) {
            currencyClient.wsr.GetCrossRateChangeRequest inValue = new currencyClient.wsr.GetCrossRateChangeRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCrossRateChangeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetCurrencyChartCustomResponse currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyChartCustom(currencyClient.wsr.GetCurrencyChartCustomRequest request) {
            return base.Channel.GetCurrencyChartCustom(request);
        }
        
        public currencyClient.wsr.HistoricalChart GetCurrencyChartCustom(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, currencyClient.wsr.ChartDesign Design) {
            currencyClient.wsr.GetCurrencyChartCustomRequest inValue = new currencyClient.wsr.GetCurrencyChartCustomRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.PeriodType = PeriodType;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.Design = Design;
            currencyClient.wsr.GetCurrencyChartCustomResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyChartCustom(inValue);
            return retVal.GetCurrencyChartCustomResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartCustomResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyChartCustomAsync(currencyClient.wsr.GetCurrencyChartCustomRequest request) {
            return base.Channel.GetCurrencyChartCustomAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartCustomResponse> GetCurrencyChartCustomAsync(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, currencyClient.wsr.ChartDesign Design) {
            currencyClient.wsr.GetCurrencyChartCustomRequest inValue = new currencyClient.wsr.GetCurrencyChartCustomRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.PeriodType = PeriodType;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.Design = Design;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyChartCustomAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetCurrencyChartCustomBinaryResponse currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyChartCustomBinary(currencyClient.wsr.GetCurrencyChartCustomBinaryRequest request) {
            return base.Channel.GetCurrencyChartCustomBinary(request);
        }
        
        public currencyClient.wsr.ChartBinary GetCurrencyChartCustomBinary(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, currencyClient.wsr.ChartDesign Design) {
            currencyClient.wsr.GetCurrencyChartCustomBinaryRequest inValue = new currencyClient.wsr.GetCurrencyChartCustomBinaryRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.PeriodType = PeriodType;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.Design = Design;
            currencyClient.wsr.GetCurrencyChartCustomBinaryResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyChartCustomBinary(inValue);
            return retVal.GetCurrencyChartCustomBinaryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartCustomBinaryResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyChartCustomBinaryAsync(currencyClient.wsr.GetCurrencyChartCustomBinaryRequest request) {
            return base.Channel.GetCurrencyChartCustomBinaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartCustomBinaryResponse> GetCurrencyChartCustomBinaryAsync(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, currencyClient.wsr.ChartDesign Design) {
            currencyClient.wsr.GetCurrencyChartCustomBinaryRequest inValue = new currencyClient.wsr.GetCurrencyChartCustomBinaryRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.PeriodType = PeriodType;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.Design = Design;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyChartCustomBinaryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetCurrencyChartResponse currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyChart(currencyClient.wsr.GetCurrencyChartRequest request) {
            return base.Channel.GetCurrencyChart(request);
        }
        
        public currencyClient.wsr.HistoricalChart GetCurrencyChart(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string Preset) {
            currencyClient.wsr.GetCurrencyChartRequest inValue = new currencyClient.wsr.GetCurrencyChartRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.PeriodType = PeriodType;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.Preset = Preset;
            currencyClient.wsr.GetCurrencyChartResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyChart(inValue);
            return retVal.GetCurrencyChartResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyChartAsync(currencyClient.wsr.GetCurrencyChartRequest request) {
            return base.Channel.GetCurrencyChartAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartResponse> GetCurrencyChartAsync(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string Preset) {
            currencyClient.wsr.GetCurrencyChartRequest inValue = new currencyClient.wsr.GetCurrencyChartRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.PeriodType = PeriodType;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.Preset = Preset;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyChartAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetCurrencyChartBinaryResponse currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyChartBinary(currencyClient.wsr.GetCurrencyChartBinaryRequest request) {
            return base.Channel.GetCurrencyChartBinary(request);
        }
        
        public currencyClient.wsr.ChartBinary GetCurrencyChartBinary(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string Preset) {
            currencyClient.wsr.GetCurrencyChartBinaryRequest inValue = new currencyClient.wsr.GetCurrencyChartBinaryRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.PeriodType = PeriodType;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.Preset = Preset;
            currencyClient.wsr.GetCurrencyChartBinaryResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyChartBinary(inValue);
            return retVal.GetCurrencyChartBinaryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartBinaryResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyChartBinaryAsync(currencyClient.wsr.GetCurrencyChartBinaryRequest request) {
            return base.Channel.GetCurrencyChartBinaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyChartBinaryResponse> GetCurrencyChartBinaryAsync(currencyClient.wsr.Header Header, string Symbol, currencyClient.wsr.HistoricalPeriodTypes PeriodType, string StartDate, string EndDate, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string Preset) {
            currencyClient.wsr.GetCurrencyChartBinaryRequest inValue = new currencyClient.wsr.GetCurrencyChartBinaryRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.PeriodType = PeriodType;
            inValue.StartDate = StartDate;
            inValue.EndDate = EndDate;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.Preset = Preset;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyChartBinaryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetCurrencyIntradayChartResponse currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyIntradayChart(currencyClient.wsr.GetCurrencyIntradayChartRequest request) {
            return base.Channel.GetCurrencyIntradayChart(request);
        }
        
        public currencyClient.wsr.CurrencyChartIntraday GetCurrencyIntradayChart(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string TimeZone, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string PeriodType, int TickPeriods, string Preset) {
            currencyClient.wsr.GetCurrencyIntradayChartRequest inValue = new currencyClient.wsr.GetCurrencyIntradayChartRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.TimeZone = TimeZone;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.PeriodType = PeriodType;
            inValue.TickPeriods = TickPeriods;
            inValue.Preset = Preset;
            currencyClient.wsr.GetCurrencyIntradayChartResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyIntradayChart(inValue);
            return retVal.GetCurrencyIntradayChartResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyIntradayChartResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyIntradayChartAsync(currencyClient.wsr.GetCurrencyIntradayChartRequest request) {
            return base.Channel.GetCurrencyIntradayChartAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyIntradayChartResponse> GetCurrencyIntradayChartAsync(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string TimeZone, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string PeriodType, int TickPeriods, string Preset) {
            currencyClient.wsr.GetCurrencyIntradayChartRequest inValue = new currencyClient.wsr.GetCurrencyIntradayChartRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.TimeZone = TimeZone;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.PeriodType = PeriodType;
            inValue.TickPeriods = TickPeriods;
            inValue.Preset = Preset;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyIntradayChartAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryResponse currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyIntradayChartCustomBinary(currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryRequest request) {
            return base.Channel.GetCurrencyIntradayChartCustomBinary(request);
        }
        
        public currencyClient.wsr.ChartBinary GetCurrencyIntradayChartCustomBinary(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string TimeZone, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string PeriodType, int TickPeriods, currencyClient.wsr.ChartDesign Design) {
            currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryRequest inValue = new currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.TimeZone = TimeZone;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.PeriodType = PeriodType;
            inValue.TickPeriods = TickPeriods;
            inValue.Design = Design;
            currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyIntradayChartCustomBinary(inValue);
            return retVal.GetCurrencyIntradayChartCustomBinaryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyIntradayChartCustomBinaryAsync(currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryRequest request) {
            return base.Channel.GetCurrencyIntradayChartCustomBinaryAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryResponse> GetCurrencyIntradayChartCustomBinaryAsync(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string TimeZone, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string PeriodType, int TickPeriods, currencyClient.wsr.ChartDesign Design) {
            currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryRequest inValue = new currencyClient.wsr.GetCurrencyIntradayChartCustomBinaryRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.TimeZone = TimeZone;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.PeriodType = PeriodType;
            inValue.TickPeriods = TickPeriods;
            inValue.Design = Design;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyIntradayChartCustomBinaryAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetCurrencyIntradayChartCustomResponse currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyIntradayChartCustom(currencyClient.wsr.GetCurrencyIntradayChartCustomRequest request) {
            return base.Channel.GetCurrencyIntradayChartCustom(request);
        }
        
        public currencyClient.wsr.CurrencyChartIntraday GetCurrencyIntradayChartCustom(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string TimeZone, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string PeriodType, int TickPeriods, currencyClient.wsr.ChartDesign Design) {
            currencyClient.wsr.GetCurrencyIntradayChartCustomRequest inValue = new currencyClient.wsr.GetCurrencyIntradayChartCustomRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.TimeZone = TimeZone;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.PeriodType = PeriodType;
            inValue.TickPeriods = TickPeriods;
            inValue.Design = Design;
            currencyClient.wsr.GetCurrencyIntradayChartCustomResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyIntradayChartCustom(inValue);
            return retVal.GetCurrencyIntradayChartCustomResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyIntradayChartCustomResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetCurrencyIntradayChartCustomAsync(currencyClient.wsr.GetCurrencyIntradayChartCustomRequest request) {
            return base.Channel.GetCurrencyIntradayChartCustomAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetCurrencyIntradayChartCustomResponse> GetCurrencyIntradayChartCustomAsync(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string TimeZone, currencyClient.wsr.StockChartStyles Style, int Width, int Height, string PeriodType, int TickPeriods, currencyClient.wsr.ChartDesign Design) {
            currencyClient.wsr.GetCurrencyIntradayChartCustomRequest inValue = new currencyClient.wsr.GetCurrencyIntradayChartCustomRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.TimeZone = TimeZone;
            inValue.Style = Style;
            inValue.Width = Width;
            inValue.Height = Height;
            inValue.PeriodType = PeriodType;
            inValue.TickPeriods = TickPeriods;
            inValue.Design = Design;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetCurrencyIntradayChartCustomAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetChartDesignResponse currencyClient.wsr.XigniteCurrenciesSoap.GetChartDesign(currencyClient.wsr.GetChartDesignRequest request) {
            return base.Channel.GetChartDesign(request);
        }
        
        public currencyClient.wsr.ChartDesign GetChartDesign(currencyClient.wsr.Header Header) {
            currencyClient.wsr.GetChartDesignRequest inValue = new currencyClient.wsr.GetChartDesignRequest();
            inValue.Header = Header;
            currencyClient.wsr.GetChartDesignResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetChartDesign(inValue);
            return retVal.GetChartDesignResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetChartDesignResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetChartDesignAsync(currencyClient.wsr.GetChartDesignRequest request) {
            return base.Channel.GetChartDesignAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetChartDesignResponse> GetChartDesignAsync(currencyClient.wsr.Header Header) {
            currencyClient.wsr.GetChartDesignRequest inValue = new currencyClient.wsr.GetChartDesignRequest();
            inValue.Header = Header;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetChartDesignAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetTickResponse currencyClient.wsr.XigniteCurrenciesSoap.GetTick(currencyClient.wsr.GetTickRequest request) {
            return base.Channel.GetTick(request);
        }
        
        public currencyClient.wsr.SingleTick GetTick(currencyClient.wsr.Header Header, string Symbol, string Time) {
            currencyClient.wsr.GetTickRequest inValue = new currencyClient.wsr.GetTickRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.Time = Time;
            currencyClient.wsr.GetTickResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetTick(inValue);
            return retVal.GetTickResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetTickResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetTickAsync(currencyClient.wsr.GetTickRequest request) {
            return base.Channel.GetTickAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetTickResponse> GetTickAsync(currencyClient.wsr.Header Header, string Symbol, string Time) {
            currencyClient.wsr.GetTickRequest inValue = new currencyClient.wsr.GetTickRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.Time = Time;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetTickAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetTicksResponse currencyClient.wsr.XigniteCurrenciesSoap.GetTicks(currencyClient.wsr.GetTicksRequest request) {
            return base.Channel.GetTicks(request);
        }
        
        public currencyClient.wsr.Ticks GetTicks(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, currencyClient.wsr.TickPeriod TickPrecision, int TickPeriods) {
            currencyClient.wsr.GetTicksRequest inValue = new currencyClient.wsr.GetTicksRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.TickPrecision = TickPrecision;
            inValue.TickPeriods = TickPeriods;
            currencyClient.wsr.GetTicksResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetTicks(inValue);
            return retVal.GetTicksResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetTicksResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetTicksAsync(currencyClient.wsr.GetTicksRequest request) {
            return base.Channel.GetTicksAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetTicksResponse> GetTicksAsync(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, currencyClient.wsr.TickPeriod TickPrecision, int TickPeriods) {
            currencyClient.wsr.GetTicksRequest inValue = new currencyClient.wsr.GetTicksRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.TickPrecision = TickPrecision;
            inValue.TickPeriods = TickPeriods;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetTicksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalTicksResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalTicks(currencyClient.wsr.GetHistoricalTicksRequest request) {
            return base.Channel.GetHistoricalTicks(request);
        }
        
        public currencyClient.wsr.Ticks GetHistoricalTicks(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string AsOfDate, currencyClient.wsr.TickPeriod TickPrecision, int TickPeriods) {
            currencyClient.wsr.GetHistoricalTicksRequest inValue = new currencyClient.wsr.GetHistoricalTicksRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.AsOfDate = AsOfDate;
            inValue.TickPrecision = TickPrecision;
            inValue.TickPeriods = TickPeriods;
            currencyClient.wsr.GetHistoricalTicksResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalTicks(inValue);
            return retVal.GetHistoricalTicksResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalTicksResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalTicksAsync(currencyClient.wsr.GetHistoricalTicksRequest request) {
            return base.Channel.GetHistoricalTicksAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalTicksResponse> GetHistoricalTicksAsync(currencyClient.wsr.Header Header, string Symbol, string StartTime, string EndTime, string AsOfDate, currencyClient.wsr.TickPeriod TickPrecision, int TickPeriods) {
            currencyClient.wsr.GetHistoricalTicksRequest inValue = new currencyClient.wsr.GetHistoricalTicksRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartTime = StartTime;
            inValue.EndTime = EndTime;
            inValue.AsOfDate = AsOfDate;
            inValue.TickPrecision = TickPrecision;
            inValue.TickPeriods = TickPeriods;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalTicksAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetHistoricalHighLowResponse currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalHighLow(currencyClient.wsr.GetHistoricalHighLowRequest request) {
            return base.Channel.GetHistoricalHighLow(request);
        }
        
        public currencyClient.wsr.HighLowTick GetHistoricalHighLow(currencyClient.wsr.Header Header, string Symbol, string StartDateTime, string EndDateTime) {
            currencyClient.wsr.GetHistoricalHighLowRequest inValue = new currencyClient.wsr.GetHistoricalHighLowRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDateTime = StartDateTime;
            inValue.EndDateTime = EndDateTime;
            currencyClient.wsr.GetHistoricalHighLowResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalHighLow(inValue);
            return retVal.GetHistoricalHighLowResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalHighLowResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetHistoricalHighLowAsync(currencyClient.wsr.GetHistoricalHighLowRequest request) {
            return base.Channel.GetHistoricalHighLowAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetHistoricalHighLowResponse> GetHistoricalHighLowAsync(currencyClient.wsr.Header Header, string Symbol, string StartDateTime, string EndDateTime) {
            currencyClient.wsr.GetHistoricalHighLowRequest inValue = new currencyClient.wsr.GetHistoricalHighLowRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDateTime = StartDateTime;
            inValue.EndDateTime = EndDateTime;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetHistoricalHighLowAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        currencyClient.wsr.GetIntradayHighLowResponse currencyClient.wsr.XigniteCurrenciesSoap.GetIntradayHighLow(currencyClient.wsr.GetIntradayHighLowRequest request) {
            return base.Channel.GetIntradayHighLow(request);
        }
        
        public currencyClient.wsr.HighLowTick GetIntradayHighLow(currencyClient.wsr.Header Header, string Symbol, string StartDateTime, string EndDateTime) {
            currencyClient.wsr.GetIntradayHighLowRequest inValue = new currencyClient.wsr.GetIntradayHighLowRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDateTime = StartDateTime;
            inValue.EndDateTime = EndDateTime;
            currencyClient.wsr.GetIntradayHighLowResponse retVal = ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetIntradayHighLow(inValue);
            return retVal.GetIntradayHighLowResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<currencyClient.wsr.GetIntradayHighLowResponse> currencyClient.wsr.XigniteCurrenciesSoap.GetIntradayHighLowAsync(currencyClient.wsr.GetIntradayHighLowRequest request) {
            return base.Channel.GetIntradayHighLowAsync(request);
        }
        
        public System.Threading.Tasks.Task<currencyClient.wsr.GetIntradayHighLowResponse> GetIntradayHighLowAsync(currencyClient.wsr.Header Header, string Symbol, string StartDateTime, string EndDateTime) {
            currencyClient.wsr.GetIntradayHighLowRequest inValue = new currencyClient.wsr.GetIntradayHighLowRequest();
            inValue.Header = Header;
            inValue.Symbol = Symbol;
            inValue.StartDateTime = StartDateTime;
            inValue.EndDateTime = EndDateTime;
            return ((currencyClient.wsr.XigniteCurrenciesSoap)(this)).GetIntradayHighLowAsync(inValue);
        }
    }
}
